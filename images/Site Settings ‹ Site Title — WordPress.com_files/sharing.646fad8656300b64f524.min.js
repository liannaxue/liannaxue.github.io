webpackJsonp([21],{1438:function(module,exports,__webpack_require__){"use strict";var page=__webpack_require__(40);var sharingController=__webpack_require__(2684),controller=__webpack_require__(655),config=__webpack_require__(10);module.exports=function(){if(config.isEnabled("manage/sharing")){page(/^\/sharing(\/buttons)?$/,controller.siteSelection,controller.sites);page("/sharing/:domain",controller.siteSelection,controller.navigation,controller.awaitSiteLoaded,controller.jetpackModuleActive("publicize",false),sharingController.connections,sharingController.layout);page("/sharing/buttons/:domain",controller.siteSelection,controller.navigation,controller.awaitSiteLoaded,controller.jetpackModuleActive("sharedaddy"),sharingController.buttons,sharingController.layout)}}},1459:function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.isPlansWordingEnabled=exports.isPlanFeaturesEnabled=undefined;var _extends2=__webpack_require__(19);var _extends3=_interopRequireDefault(_extends2);var _keys=__webpack_require__(44);var _keys2=_interopRequireDefault(_keys);var _invoke2=__webpack_require__(677);var _invoke3=_interopRequireDefault(_invoke2);var _includes2=__webpack_require__(34);var _includes3=_interopRequireDefault(_includes2);var _get2=__webpack_require__(30);var _get3=_interopRequireDefault(_get2);var _find2=__webpack_require__(33);var _find3=_interopRequireDefault(_find2);exports.isFreePlan=isFreePlan;exports.getPlan=getPlan;exports.getValidFeatureKeys=getValidFeatureKeys;exports.isValidFeatureKey=isValidFeatureKey;exports.getFeatureByKey=getFeatureByKey;exports.getFeatureTitle=getFeatureTitle;exports.getSitePlanSlug=getSitePlanSlug;exports.canUpgradeToPlan=canUpgradeToPlan;exports.getUpgradePlanSlugFromPath=getUpgradePlanSlugFromPath;exports.getPlanPath=getPlanPath;exports.planHasFeature=planHasFeature;exports.hasFeature=hasFeature;exports.addCurrentPlanToCartAndRedirect=addCurrentPlanToCartAndRedirect;exports.getCurrentPlan=getCurrentPlan;exports.getCurrentTrialPeriodInDays=getCurrentTrialPeriodInDays;exports.getDayOfTrial=getDayOfTrial;exports.getDaysUntilUserFacingExpiry=getDaysUntilUserFacingExpiry;exports.getDaysUntilExpiry=getDaysUntilExpiry;exports.isInGracePeriod=isInGracePeriod;exports.shouldFetchSitePlans=shouldFetchSitePlans;exports.filterPlansBySiteAndProps=filterPlansBySiteAndProps;exports.plansLink=plansLink;exports.applyTestFiltersToPlansList=applyTestFiltersToPlansList;var _page=__webpack_require__(40);var _page2=_interopRequireDefault(_page);var _moment=__webpack_require__(2);var _moment2=_interopRequireDefault(_moment);var _debug=__webpack_require__(4);var _debug2=_interopRequireDefault(_debug);var _config=__webpack_require__(10);var _actions=__webpack_require__(646);var _cartValues=__webpack_require__(184);var _productsValues=__webpack_require__(80);var _constants=__webpack_require__(187);var _assembler=__webpack_require__(360);var _sitesList=__webpack_require__(55);var _sitesList2=_interopRequireDefault(_sitesList);var _abtest=__webpack_require__(248);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}var sitesList=(0,_sitesList2.default)();var debug=(0,_debug2.default)("calypso:plans");var isPersonalPlanEnabled=(0,_config.isEnabled)("plans/personal-plan");function isFreePlan(plan){return plan===_constants.PLAN_FREE||plan===_constants.PLAN_JETPACK_FREE}function getPlan(plan){return _constants.plansList[plan]}function getValidFeatureKeys(){return(0,_keys2.default)(_constants.featuresList)}function isValidFeatureKey(feature){return!!_constants.featuresList[feature]}function getFeatureByKey(feature){return _constants.featuresList[feature]}function getFeatureTitle(feature){return(0,_invoke3.default)(_constants.featuresList,[feature,"getTitle"])}function getSitePlanSlug(siteID){var site=void 0;if(siteID){site=sitesList.getSite(siteID)}else{site=sitesList.getSelectedSite()}return(0,_get3.default)(site,"plan.product_slug")}function canUpgradeToPlan(planKey){var site=arguments.length<=1||arguments[1]===undefined?sitesList.getSelectedSite():arguments[1];var plan=(0,_get3.default)(site,["plan","expired"],false)?_constants.PLAN_FREE:(0,_get3.default)(site,["plan","product_slug"],_constants.PLAN_FREE);return(0,_get3.default)(_constants.plansList,[planKey,"availableFor"],function(){return false})(plan)}function getUpgradePlanSlugFromPath(path,siteID){var site=siteID?sitesList.getSite(siteID):sitesList.getSelectedSite();return(0,_find3.default)((0,_keys2.default)(_constants.plansList),function(planKey){return(planKey===path||getPlanPath(planKey)===path)&&canUpgradeToPlan(planKey,site)})}function getPlanPath(plan){return(0,_get3.default)(_constants.plansList,[plan,"getPathSlug"],function(){return undefined})()}function planHasFeature(plan,feature){return(0,_includes3.default)((0,_get3.default)(_constants.featuresList,[feature,"plans"]),plan)}function hasFeature(feature,siteID){return planHasFeature(getSitePlanSlug(siteID),feature)}function addCurrentPlanToCartAndRedirect(sitePlans,selectedSite){(0,_actions.addItem)(_cartValues.cartItems.planItem(getCurrentPlan(sitePlans.data).productSlug));(0,_page2.default)("/checkout/"+selectedSite.slug)}function getCurrentPlan(plans){var currentPlan=(0,_find3.default)(plans,{currentPlan:true});if(currentPlan){debug("current plan: %o",currentPlan);return currentPlan}var site=sitesList.getSelectedSite();var plan=(0,_assembler.createSitePlanObject)(site.plan);debug("current plan: %o",plan);return plan}function getCurrentTrialPeriodInDays(plan){var expiryMoment=plan.expiryMoment;var subscribedDayMoment=plan.subscribedDayMoment;var userFacingExpiryMoment=plan.userFacingExpiryMoment;if(isInGracePeriod(plan)){return expiryMoment.diff(userFacingExpiryMoment,"days")}return userFacingExpiryMoment.diff(subscribedDayMoment,"days")}function getDayOfTrial(plan){var subscribedDayMoment=plan.subscribedDayMoment;return(0,_moment2.default)().startOf("day").diff(subscribedDayMoment,"days")+1}function getDaysUntilUserFacingExpiry(plan){var userFacingExpiryMoment=plan.userFacingExpiryMoment;return userFacingExpiryMoment.diff((0,_moment2.default)().startOf("day"),"days")}function getDaysUntilExpiry(plan){var expiryMoment=plan.expiryMoment;return expiryMoment.diff((0,_moment2.default)().startOf("day"),"days")}function isInGracePeriod(plan){return getDaysUntilUserFacingExpiry(plan)<=0}function shouldFetchSitePlans(sitePlans,selectedSite){return!sitePlans.hasLoadedFromServer&&!sitePlans.isRequesting&&selectedSite}function filterPlansBySiteAndProps(plans,site,hideFreePlan,intervalType,showJetpackFreePlan){var hasPersonalPlan=site&&site.plan.product_slug===_constants.PLAN_PERSONAL;return plans.filter(function(plan){if(site&&site.jetpack){if("monthly"===intervalType){if(showJetpackFreePlan){return(0,_productsValues.isJetpackPlan)(plan)&&(0,_productsValues.isMonthly)(plan)}return(0,_productsValues.isJetpackPlan)(plan)&&!(0,_productsValues.isFreeJetpackPlan)(plan)&&(0,_productsValues.isMonthly)(plan)}if(showJetpackFreePlan){return(0,_productsValues.isJetpackPlan)(plan)&&!(0,_productsValues.isMonthly)(plan)}return(0,_productsValues.isJetpackPlan)(plan)&&!(0,_productsValues.isFreeJetpackPlan)(plan)&&!(0,_productsValues.isMonthly)(plan)}if(hideFreePlan&&_constants.PLAN_FREE===plan.product_slug){return false}if(plan.product_slug===_constants.PLAN_PERSONAL&&!(hasPersonalPlan||isPersonalPlanEnabled)){return false}return!(0,_productsValues.isJetpackPlan)(plan)})}var isPlanFeaturesEnabled=exports.isPlanFeaturesEnabled=function isPlanFeaturesEnabled(){return(0,_config.isEnabled)("manage/plan-features")};var isPlansWordingEnabled=exports.isPlansWordingEnabled=function isPlansWordingEnabled(){return(0,_abtest.abtest)("plansWording")==="targetedWording"};function plansLink(url,site,intervalType){if("monthly"===intervalType){url+="/monthly"}if(site){url+="/"+site.slug}return url}function applyTestFiltersToPlansList(planName){var filteredPlanConstantObj=(0,_extends3.default)({},_constants.plansList[planName]);var filteredPlanFeaturesConstantList=_constants.plansList[planName].getFeatures();var removeDisabledFeatures=function removeDisabledFeatures(){};var updatePlanDescriptions=function updatePlanDescriptions(){if(isPlansWordingEnabled()&&(0,_includes3.default)(_constants.allWpcomPlans,planName)){filteredPlanConstantObj.getDescription=_constants.plansList[planName].getTargetedDescription}};var updatePlanFeatures=function updatePlanFeatures(){};removeDisabledFeatures();updatePlanDescriptions();updatePlanFeatures();filteredPlanConstantObj.getFeatures=function(){return filteredPlanFeaturesConstantList};return filteredPlanConstantObj}},1486:function(module,exports,__webpack_require__){"use strict";var React=__webpack_require__(1),classNames=__webpack_require__(11),noop=__webpack_require__(36);var Card=__webpack_require__(145),CompactCard=__webpack_require__(1450),Gridicon=__webpack_require__(28);var FoldableCard=React.createClass({displayName:"FoldableCard",propTypes:{actionButton:React.PropTypes.element,actionButtonExpanded:React.PropTypes.element,cardKey:React.PropTypes.string,compact:React.PropTypes.bool,disabled:React.PropTypes.bool,expandedSummary:React.PropTypes.oneOfType([React.PropTypes.string,React.PropTypes.element]),expanded:React.PropTypes.bool,icon:React.PropTypes.string,onClick:React.PropTypes.func,onClose:React.PropTypes.func,onOpen:React.PropTypes.func,screenReaderText:React.PropTypes.oneOfType([React.PropTypes.string,React.PropTypes.bool]),summary:React.PropTypes.oneOfType([React.PropTypes.string,React.PropTypes.element])},getInitialState:function getInitialState(){return{expanded:this.props.expanded}},getDefaultProps:function getDefaultProps(){return{onOpen:noop,onClose:noop,cardKey:"",icon:"chevron-down",isExpanded:false,screenReaderText:false}},onClick:function onClick(){if(this.props.children){this.setState({expanded:!this.state.expanded})}if(this.props.onClick){this.props.onClick()}if(this.state.expanded){this.props.onClose(this.props.cardKey)}else{this.props.onOpen(this.props.cardKey)}},getClickAction:function getClickAction(){if(this.props.disabled){return}return this.onClick},getActionButton:function getActionButton(){if(this.state.expanded){return this.props.actionButtonExpanded||this.props.actionButton}return this.props.actionButton},renderActionButton:function renderActionButton(){var clickAction=!this.props.clickableHeader?this.getClickAction():null;if(this.props.actionButton){return React.createElement("div",{className:"foldable-card__action",onClick:clickAction},this.getActionButton())}if(this.props.children){var iconSize=24;var screenReaderText=this.props.screenReaderText||this.translate("More");return React.createElement("button",{disabled:this.props.disabled,className:"foldable-card__action foldable-card__expand",onClick:clickAction},React.createElement("span",{className:"screen-reader-text"},screenReaderText),React.createElement(Gridicon,{icon:this.props.icon,size:iconSize}))}},renderContent:function renderContent(){return React.createElement("div",{className:"foldable-card__content"},this.props.children)},renderHeader:function renderHeader(){var summary=this.props.summary?React.createElement("span",{className:"foldable-card__summary"},this.props.summary," "):null,expandedSummary=this.props.expandedSummary?React.createElement("span",{className:"foldable-card__summary_expanded"},this.props.expandedSummary," "):null,headerClickAction=this.props.clickableHeader?this.getClickAction():null,headerClasses=classNames("foldable-card__header",{"is-clickable":!!this.props.clickableHeader,"has-border":!!this.props.summary});return React.createElement("div",{className:headerClasses,onClick:headerClickAction},React.createElement("span",{className:"foldable-card__main"},this.props.header," "),React.createElement("span",{className:"foldable-card__secondary"},summary,expandedSummary,this.renderActionButton()))},render:function render(){var Container=this.props.compact?CompactCard:Card,itemSiteClasses=classNames("foldable-card",this.props.className,{"is-disabled":!!this.props.disabled,"is-expanded":!!this.state.expanded,"has-expanded-summary":!!this.props.expandedSummary});return React.createElement(Container,{className:itemSiteClasses},this.renderHeader(),this.state.expanded&&this.renderContent())}});module.exports=FoldableCard},1545:function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:true});var _toConsumableArray2=__webpack_require__(46);var _toConsumableArray3=_interopRequireDefault(_toConsumableArray2);var _react=__webpack_require__(1);var _react2=_interopRequireDefault(_react);var _classnames=__webpack_require__(11);var _classnames2=_interopRequireDefault(_classnames);var _noop=__webpack_require__(36);var _noop2=_interopRequireDefault(_noop);var _button=__webpack_require__(68);var _button2=_interopRequireDefault(_button);var _card=__webpack_require__(145);var _card2=_interopRequireDefault(_card);var _gridicon=__webpack_require__(28);var _gridicon2=_interopRequireDefault(_gridicon);var _analytics=__webpack_require__(16);var _analytics2=_interopRequireDefault(_analytics);var _sitesList=__webpack_require__(55);var _sitesList2=_interopRequireDefault(_sitesList);var _plans=__webpack_require__(1459);var _productsValues=__webpack_require__(80);var _trackComponentView=__webpack_require__(668);var _trackComponentView2=_interopRequireDefault(_trackComponentView);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}var sites=(0,_sitesList2.default)();exports.default=_react2.default.createClass({displayName:"UpgradeNudge",propTypes:{onClick:_react2.default.PropTypes.func,className:_react2.default.PropTypes.string,message:_react2.default.PropTypes.string,icon:_react2.default.PropTypes.string,event:_react2.default.PropTypes.string,href:_react2.default.PropTypes.string,jetpack:_react2.default.PropTypes.bool,compact:_react2.default.PropTypes.bool,feature:_react2.default.PropTypes.oneOf([false].concat((0,_toConsumableArray3.default)((0,_plans.getValidFeatureKeys)()))),shouldDisplay:_react2.default.PropTypes.func},getDefaultProps:function getDefaultProps(){return{onClick:_noop2.default,message:"And get your own domain address.",icon:"star",event:null,jetpack:false,feature:false,compact:false,shouldDisplay:null}},handleClick:function handleClick(){if(this.props.event||this.props.feature){_analytics2.default.tracks.recordEvent("calypso_upgrade_nudge_cta_click",{cta_name:this.props.event,cta_feature:this.props.feature})}this.props.onClick()},shouldDisplay:function shouldDisplay(site){var _props=this.props;var feature=_props.feature;var jetpack=_props.jetpack;var shouldDisplay=_props.shouldDisplay;if(shouldDisplay){return shouldDisplay()}if(!site){return false}if(feature&&(0,_plans.hasFeature)(feature,site.ID)){return false}if(!feature&&!(0,_productsValues.isFreePlan)(site.plan)){return false}if(feature==="no-adverts"&&site.options.wordads){return false}if(!jetpack&&site.jetpack||jetpack&&!site.jetpack){return false}return true},render:function render(){var classes=(0,_classnames2.default)(this.props.className,"upgrade-nudge");var site=sites.getSelectedSite();var href=this.props.href;if(!this.shouldDisplay(site)){return null}if(!this.props.href&&site){if(this.props.feature){href="/plans/"+site.slug+"?feature="+this.props.feature}else{href="/plans/"+site.slug}}if(this.props.compact){return _react2.default.createElement(_button2.default,{className:classes,onClick:this.handleClick,href:href},_react2.default.createElement(_gridicon2.default,{className:"upgrade-nudge__icon",icon:this.props.icon}),_react2.default.createElement("div",{className:"upgrade-nudge__info"},_react2.default.createElement("span",{className:"upgrade-nudge__title"},this.props.title||this.translate("Upgrade to Premium")),_react2.default.createElement("span",{className:"upgrade-nudge__message"},this.props.message)))}return _react2.default.createElement(_card2.default,{compact:true,className:classes,onClick:this.handleClick,href:href},_react2.default.createElement(_gridicon2.default,{className:"upgrade-nudge__icon",icon:this.props.icon,size:18}),_react2.default.createElement("div",{className:"upgrade-nudge__info"},_react2.default.createElement("span",{className:"upgrade-nudge__title"},this.props.title||this.translate("Upgrade to Premium")),_react2.default.createElement("span",{className:"upgrade-nudge__message"},this.props.message)),(this.props.event||this.props.feature)&&_react2.default.createElement(_trackComponentView2.default,{eventName:"calypso_upgrade_nudge_impression",eventProperties:{cta_name:this.props.event,cta_feature:this.props.feature}}))}});module.exports=exports["default"]},1592:function(module,exports,__webpack_require__){"use strict";var some=__webpack_require__(82),flatten=__webpack_require__(355),filter=__webpack_require__(69),uniq=__webpack_require__(258);var connectionsList=__webpack_require__(1653)(),sites=__webpack_require__(55)(),user=__webpack_require__(37)(),services=__webpack_require__(1945);module.exports={isServiceInConnections:function isServiceInConnections(serviceName,connections){var isInConnections=Array.isArray(connections)&&some(connections,{service:serviceName});return this.filter("isServiceInConnections",serviceName,isInConnections,arguments)},isExternalUserInConnections:function isExternalUserInConnections(keyringConnectionId,externalUserId,connections){return some(connections,{keyring_connection_ID:keyringConnectionId,external_ID:externalUserId})},isServiceForPublicize:function isServiceForPublicize(serviceName){return this.filter("isServiceForPublicize",serviceName,true,arguments)},supportsMultipleConnectionsPerSite:function supportsMultipleConnectionsPerSite(serviceName){var supportsMultipleConnections=this.isServiceForPublicize(serviceName);return this.filter("supportsMultipleConnectionsPerSite",serviceName,supportsMultipleConnections,arguments)},isServiceConnected:function isServiceConnected(serviceName,siteId){var currentUser=user.get(),isConnected;if(!siteId&&sites.selected){siteId=sites.getSelectedSite().ID}isConnected=currentUser&&this.isServiceInConnections(serviceName,this.getConnections(serviceName,siteId));return this.filter("isServiceConnected",serviceName,isConnected,arguments)},isFetchingAccounts:function isFetchingAccounts(){return!connectionsList.initialized},getConnectionStatus:function getConnectionStatus(serviceName,siteId){var status;if(!siteId&&sites.selected){siteId=sites.getSelectedSite().ID}if(this.isFetchingAccounts()){status="unknown"}else if(!this.isServiceConnected(serviceName,siteId)){status="not-connected"}else if(some(this.getConnections(serviceName,siteId),{status:"broken",keyring_connection_user_ID:user.get().ID})){status="reconnect"}else{status="connected"}return this.filter("getConnectionStatus",serviceName,status,arguments)},getConnectionsAvailableToCurrentUser:function getConnectionsAvailableToCurrentUser(serviceName,connections){var currentUser=user.get();if(!currentUser){return[]}return connections.filter(function(connection){return connection.service===serviceName&&(connection.keyring_connection_user_ID===currentUser.ID||connection.shared)})},getConnections:function getConnections(serviceName,siteId){var currentUser=user.get(),connections;if(currentUser){if(!siteId&&sites.selected){siteId=sites.getSelectedSite().ID}if(!this.isServiceForPublicize(serviceName)){siteId=null}connections=connectionsList.get(siteId);connections=this.getConnectionsAvailableToCurrentUser(serviceName,connections)}else{connections=[]}return this.filter("getConnections",serviceName,connections,arguments)},getServicesFromConnections:function getServicesFromConnections(connections){return uniq(connections.map(function(connection){return{name:connection.service,label:connection.label}}),"name")},getRefreshableConnections:function getRefreshableConnections(serviceName,siteId){var connections=this.getConnections(serviceName,siteId).filter(function(connection){return"broken"===connection.status&&connection.keyring_connection_user_ID===user.get().ID},this);return this.filter("getRefreshableConnections",serviceName,connections,arguments)},getRemovableConnections:function getRemovableConnections(serviceName,siteId){var connections=this.getConnections(serviceName,siteId).filter(function(connection){return this.canCurrentUserPerformActionOnConnection("delete",connection,siteId)},this);return this.filter("getRemovableConnections",serviceName,connections,arguments)},filterConnectionsToRemove:function filterConnectionsToRemove(connections,siteId){if(!Array.isArray(connections)){connections=[connections]}return connections.filter(function(connection){return this.filterConnectionToRemove(connection,siteId)},this)},filterConnectionToRemove:function filterConnectionToRemove(connection,siteId){return this.filter("filterConnectionToRemove",connection.service,true,arguments)},canCurrentUserPerformActionOnConnection:function canCurrentUserPerformActionOnConnection(action,connection,siteId){var currentUser=user.get(),site;if(!siteId&&sites.selected){siteId=sites.getSelectedSite().ID}site=sites.getSite(siteId);if(site.capabilities&&site.capabilities.edit_others_posts){return true}else{return currentUser&&"delete"===action&&connection.user_ID===currentUser.ID}},getAvailableExternalAccounts:function getAvailableExternalAccounts(serviceName,siteId){var keyringConnections=filter(connectionsList.get(),{service:serviceName}),connections=siteId?connectionsList.get(siteId):[],accounts;accounts=flatten(keyringConnections.map(function(keyringConnection){var accounts=[{name:keyringConnection.external_display||keyringConnection.external_name,picture:keyringConnection.external_profile_picture,keyringConnectionId:keyringConnection.keyring_connection_ID,isConnected:this.isExternalUserInConnections(keyringConnection.keyring_connection_ID,keyringConnection.external_ID,connections)}];keyringConnection.additional_external_users.forEach(function(externalUser){accounts.push({ID:externalUser.external_ID,name:externalUser.external_name,picture:externalUser.external_profile_picture,keyringConnectionId:keyringConnection.keyring_connection_ID,isConnected:this.isExternalUserInConnections(keyringConnection.keyring_connection_ID,externalUser.external_ID,connections),isExternal:true})},this);return accounts},this));return this.filter("getAvailableExternalAccounts",serviceName,accounts,arguments)},didKeyringConnectionSucceed:function didKeyringConnectionSucceed(serviceName,siteId){var availableExternalAccounts=this.getAvailableExternalAccounts(serviceName,siteId),isAnyConnectionOptions=some(availableExternalAccounts,{isConnected:false});if(!availableExternalAccounts.length){connectionsList.emit("create:error",{cancel:true})}else if(!isAnyConnectionOptions){connectionsList.emit("create:error",{connected:true})}return this.filter("didKeyringConnectionSucceed",serviceName,availableExternalAccounts.length&&isAnyConnectionOptions,arguments)},filter:function filter(functionName,serviceName,value,functionArguments){if(serviceName in services&&services[serviceName][functionName]){return services[serviceName][functionName].apply(this,[value].concat(Array.prototype.slice.call(functionArguments)))}return value}}},1653:function(module,exports,__webpack_require__){"use strict";var ConnectionsList=__webpack_require__(1882),_connections;module.exports=function(){if(!_connections){_connections=new ConnectionsList}return _connections}},1797:function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:true});var _extends2=__webpack_require__(19);var _extends3=_interopRequireDefault(_extends2);var _reactDom=__webpack_require__(43);var _reactDom2=_interopRequireDefault(_reactDom);var _react=__webpack_require__(1);var _react2=_interopRequireDefault(_react);var _debug=__webpack_require__(4);var _debug2=_interopRequireDefault(_debug);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}var debug=(0,_debug2.default)("calypso:resizable-iframe"),noop=function noop(){};exports.default=_react2.default.createClass({displayName:"ResizableIframe",propTypes:{src:_react2.default.PropTypes.string,width:_react2.default.PropTypes.oneOfType([_react2.default.PropTypes.string,_react2.default.PropTypes.number]),height:_react2.default.PropTypes.oneOfType([_react2.default.PropTypes.string,_react2.default.PropTypes.number]),onLoad:_react2.default.PropTypes.func,onResize:_react2.default.PropTypes.func},getInitialState:function getInitialState(){return{width:0,height:0}},getDefaultProps:function getDefaultProps(){return{onLoad:noop,onResize:noop}},componentWillMount:function componentWillMount(){debug("Mounting "+this.constructor.displayName+" React component.")},componentDidMount:function componentDidMount(){window.addEventListener("message",this.checkMessageForResize,false);this.maybeConnect()},componentDidUpdate:function componentDidUpdate(){this.maybeConnect()},componentWillUnmount:function componentWillUnmount(){window.removeEventListener("message",this.checkMessageForResize)},getFrameBody:function getFrameBody(){return _reactDom2.default.findDOMNode(this.refs.iframe).contentDocument.body},maybeConnect:function maybeConnect(){if(!this.isFrameAccessible()){return}var body=this.getFrameBody();if(null!==body.getAttribute("data-resizable-iframe-connected")){return}var script=document.createElement("script");script.innerHTML="\n\t\t\t( function() {\n\t\t\t\tvar observer;\n\n\t\t\t\tif ( ! window.MutationObserver || ! document.body || ! window.top ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tfunction sendResize() {\n\t\t\t\t\twindow.top.postMessage( {\n\t\t\t\t\t\taction: 'resize',\n\t\t\t\t\t\twidth: document.body.offsetWidth,\n\t\t\t\t\t\theight: document.body.offsetHeight\n\t\t\t\t\t}, '*' );\n\t\t\t\t}\n\n\t\t\t\tobserver = new MutationObserver( sendResize );\n\t\t\t\tobserver.observe( document.body, {\n\t\t\t\t\tattributes: true,\n\t\t\t\t\tattributeOldValue: false,\n\t\t\t\t\tcharacterData: true,\n\t\t\t\t\tcharacterDataOldValue: false,\n\t\t\t\t\tchildList: true,\n\t\t\t\t\tsubtree: true\n\t\t\t\t} );\n\n\t\t\t\t// Hack: Remove viewport unit styles, as these are relative\n\t\t\t\t// the iframe root and interfere with our mechanism for\n\t\t\t\t// determining the unconstrained page bounds.\n\t\t\t\tfunction removeViewportStyles( ruleOrNode ) {\n\t\t\t\t\t[ 'width', 'height', 'minHeight', 'maxHeight' ].forEach( function( style ) {\n\t\t\t\t\t\tif ( /^\\d+(vmin|vmax|vh|vw)$/.test( ruleOrNode.style[ style ] ) ) {\n\t\t\t\t\t\t\truleOrNode.style[ style ] = '';\n\t\t\t\t\t\t}\n\t\t\t\t\t} );\n\t\t\t\t}\n\n\t\t\t\tArray.prototype.forEach.call( document.querySelectorAll( '[style]' ), removeViewportStyles );\n\t\t\t\tArray.prototype.forEach.call( document.styleSheets, function( stylesheet ) {\n\t\t\t\t\tArray.prototype.forEach.call( stylesheet.cssRules || stylesheet.rules, removeViewportStyles );\n\t\t\t\t} );\n\n\t\t\t\tdocument.body.style.position = 'absolute';\n\t\t\t\tdocument.body.setAttribute( 'data-resizable-iframe-connected', '' );\n\n\t\t\t\tsendResize();\n\t\t\t} )();\n\t\t";body.appendChild(script)},isFrameAccessible:function isFrameAccessible(){try{return!!this.getFrameBody()}catch(e){return false}},checkMessageForResize:function checkMessageForResize(event){var iframe=_reactDom2.default.findDOMNode(this.refs.iframe);var data=event.data||{};if("string"===typeof data){try{data=JSON.parse(data)}catch(e){}}if(!iframe||iframe.contentWindow!==event.source){return}debug("Received message: %o",data);var _data=data;var action=_data.action;var width=_data.width;var height=_data.height;var _state=this.state;var oldWidth=_state.width;var oldHeight=_state.height;if("resize"===action&&(oldWidth!==width||oldHeight!==height)){this.setState({width:width,height:height});this.props.onResize()}},onLoad:function onLoad(event){this.maybeConnect();this.props.onLoad(event)},render:function render(){return _react2.default.createElement("iframe",(0,_extends3.default)({ref:"iframe"},this.props,{onLoad:this.onLoad,width:this.props.width||this.state.width,height:this.props.height||this.state.height}))}});module.exports=exports["default"]},1808:function(module,exports,__webpack_require__){"use strict";var _keys=__webpack_require__(44);var _keys2=_interopRequireDefault(_keys);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}var Emitter=__webpack_require__(32);function PopupMonitor(){this.intervals={};this.monitorInterval=null}Emitter(PopupMonitor.prototype);PopupMonitor.prototype.open=function(url,name,specs){var windowInstance;name=name||Date.now();windowInstance=window.open(url,name,specs);this.startMonitoring(name,windowInstance);return this};PopupMonitor.prototype.getScreenCenterSpecs=function(width,height){var screenTop=typeof window.screenTop!=="undefined"?window.screenTop:window.screenY,screenLeft=typeof window.screenLeft!=="undefined"?window.screenLeft:window.screenX;return["width="+width,"height="+height,"top="+(screenTop+window.innerHeight/2-height/2),"left="+(screenLeft+window.innerWidth/2-width/2)].join()};PopupMonitor.prototype.isOpen=function(name){var isClosed=false;try{isClosed=this.intervals[name]&&this.intervals[name].closed}catch(e){}return!isClosed};PopupMonitor.prototype.checkStatus=function(){for(var name in this.intervals){if(this.intervals.hasOwnProperty(name)&&!this.isOpen(name)){this.emit("close",name);delete this.intervals[name]}}if(0===(0,_keys2.default)(this.intervals).length){clearInterval(this.monitorInterval);delete this.monitorInterval}};PopupMonitor.prototype.startMonitoring=function(name,windowInstance){if(!this.monitorInterval){this.monitorInterval=setInterval(this.checkStatus.bind(this),100)}this.intervals[name]=windowInstance};module.exports=PopupMonitor},1869:function(module,exports,__webpack_require__){"use strict";var _extends2=__webpack_require__(19);var _extends3=_interopRequireDefault(_extends2);var _keys=__webpack_require__(44);var _keys2=_interopRequireDefault(_keys);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}var React=__webpack_require__(1),fromPairs=__webpack_require__(366),findIndex=__webpack_require__(351),assign=__webpack_require__(29),debug=__webpack_require__(4)("calypso:forms:sortable-list"),classNames=__webpack_require__(11);var touchDetect=__webpack_require__(155);module.exports=React.createClass({displayName:"SortableList",propTypes:{direction:React.PropTypes.oneOf(["horizontal","vertical"]),allowDrag:React.PropTypes.bool,onChange:React.PropTypes.func},getInitialState:function getInitialState(){return{activeIndex:null,activeOrder:null,position:null}},getDefaultProps:function getDefaultProps(){return{direction:"horizontal",allowDrag:true,onChange:function onChange(){}}},componentWillMount:function componentWillMount(){debug("Mounting "+this.constructor.displayName+" React component.")},componentDidMount:function componentDidMount(){document.addEventListener("mousemove",this.onMouseMove)},componentWillUnmount:function componentWillUnmount(){document.removeEventListener("mousemove",this.onMouseMove)},getPositionForCursorElement:function getPositionForCursorElement(element,event){return{top:event.clientY-element.clientHeight/2,left:event.clientX-element.clientWidth/2}},compareCursorVerticalToElement:function compareCursorVerticalToElement(element,event){var rect=element.getBoundingClientRect();if(event.clientY<rect.top){return-1}else if(event.clientY>rect.bottom){return 1}else{return 0}},isCursorBeyondElementThreshold:function isCursorBeyondElementThreshold(element,direction,permittedVertical,event){var rect=element.getBoundingClientRect();switch(direction){case"top":return event.clientY<=rect.top+rect.height/2;case"right":return event.clientX>=rect.left+rect.width/2&&("top"===permittedVertical||event.clientY>=rect.top)&&("bottom"===permittedVertical||event.clientY<=rect.bottom);case"bottom":return event.clientY>=rect.top+rect.height/2;
case"left":return event.clientX<=rect.left+rect.width/2&&("top"===permittedVertical||event.clientY>=rect.top)&&("bottom"===permittedVertical||event.clientY<=rect.bottom);default:return false}},getAdjustedElementIndex:function getAdjustedElementIndex(index){if(this.state.activeOrder){return this.state.activeOrder[index]}else{return index}},getCursorElementIndex:function getCursorElementIndex(event){var cursorCompare=this.compareCursorVerticalToElement(this.refs.list,event),adjustedActiveIndex=this.getAdjustedElementIndex(this.state.activeIndex),shadowRect=this.refs["wrap-shadow-"+this.state.activeIndex].getBoundingClientRect(),index;index=findIndex(this.props.children,function(child,i){var isBeyond,adjustedElementIndex,permittedVertical;if(i===this.state.activeIndex){return false}adjustedElementIndex=this.getAdjustedElementIndex(i);if("horizontal"===this.props.direction){if(1===cursorCompare&&this.refs["wrap-"+i].getBoundingClientRect().top>=shadowRect.top){permittedVertical="bottom"}else if(-1===cursorCompare&&this.refs["wrap-"+i].getBoundingClientRect().bottom<=shadowRect.bottom){permittedVertical="top"}}if(adjustedElementIndex<adjustedActiveIndex){isBeyond=this.isCursorBeyondElementThreshold(this.refs["wrap-"+i],"horizontal"===this.props.direction?"left":"top",permittedVertical,event)}else if(adjustedElementIndex>adjustedActiveIndex){isBeyond=isBeyond||this.isCursorBeyondElementThreshold(this.refs["wrap-"+i],"horizontal"===this.props.direction?"right":"bottom",permittedVertical,event)}return isBeyond}.bind(this));return this.getAdjustedElementIndex(index)},moveItem:function moveItem(direction){var increment="previous"===direction?-1:1,activeOrder=(0,_keys2.default)(this.props.children).map(Number);activeOrder[this.state.activeIndex+increment]=this.state.activeIndex;activeOrder[this.state.activeIndex]=this.state.activeIndex+increment;this.props.onChange(activeOrder);this.setState({activeIndex:activeOrder[this.state.activeIndex]})},onMouseDown:function onMouseDown(index,event){this.setState({activeIndex:index,position:this.getPositionForCursorElement(event.currentTarget.firstChild,event)})},onMouseMove:function onMouseMove(event){var activeOrder,newIndex;if(null===this.state.activeIndex||!this.props.allowDrag||touchDetect.hasTouch()){return}activeOrder=this.state.activeOrder;newIndex=this.getCursorElementIndex(event);if(newIndex>=0){if(this.state.activeIndex===newIndex){activeOrder=null}else{activeOrder=(0,_keys2.default)(this.props.children).map(Number);for(var i=0,il=activeOrder.length;i<il;i++){if(i>=newIndex&&i<this.state.activeIndex){activeOrder[i]=i+1}else if(i<=newIndex&&i>this.state.activeIndex){activeOrder[i]=i-1}}activeOrder[this.state.activeIndex]=newIndex}}this.setState({position:this.getPositionForCursorElement(this.refs["wrap-"+this.state.activeIndex].firstChild,event),activeOrder:activeOrder})},onMouseUp:function onMouseUp(){if(this.state.activeOrder){this.props.onChange(this.state.activeOrder)}this.setState({activeIndex:null,activeOrder:null,position:null})},onClick:function onClick(index){this.setState({activeIndex:index})},getOrderedListItemElements:function getOrderedListItemElements(){return React.Children.map(this.props.children,function(child,index){var isActive=this.state.activeIndex===index,isDraggable=this.props.allowDrag&&!touchDetect.hasTouch(),events=isDraggable?["onMouseDown","onMouseUp"]:["onClick"],style={order:this.getAdjustedElementIndex(index)},classes=classNames({"sortable-list__item":true,"is-active":isActive,"is-draggable":isDraggable}),item;events=fromPairs(events.map(function(event){return[event,this[event].bind(null,index)]},this));if(isActive){assign(style,this.state.position)}item=React.createElement("li",(0,_extends3.default)({ref:"wrap-"+index,key:"wrap-"+index},events,{className:classes,style:style}),child);if(isActive&&isDraggable){return[React.createElement("li",{ref:"wrap-shadow-"+index,key:"wrap-shadow-"+index,className:"sortable-list__item is-shadow",style:style},child),item]}else{return item}},this)},getNavigationElement:function getNavigationElement(){if(this.props.allowDrag&&!touchDetect.hasTouch()){return}return React.createElement("div",{className:"sortable-list__navigation"},React.createElement("button",{type:"button",onClick:this.moveItem.bind(null,"previous"),className:"sortable-list__navigation-button is-previous",disabled:null===this.state.activeIndex||this.state.activeIndex===0},React.createElement("span",{className:"screen-reader-text"},this.translate("Move previous")),React.createElement("span",{className:"noticon noticon-expand"})),React.createElement("button",{type:"button",onClick:this.moveItem.bind(null,"next"),className:"sortable-list__navigation-button is-next",disabled:null===this.state.activeIndex||this.state.activeIndex===this.props.children.length-1},React.createElement("span",{className:"screen-reader-text"},this.translate("Move next")),React.createElement("span",{className:"noticon noticon-collapse"})))},render:function render(){var classes=classNames({"sortable-list":true,"is-horizontal":"horizontal"===this.props.direction,"is-vertical":"vertical"===this.props.direction});return React.createElement("div",{className:classes},React.createElement("ol",{ref:"list",className:"sortable-list__list"},this.getOrderedListItemElements()),this.getNavigationElement())}})},1882:function(module,exports,__webpack_require__){"use strict";var debug=__webpack_require__(4)("calypso:connections-list"),without=__webpack_require__(190),find=__webpack_require__(33),map=__webpack_require__(50),filter=__webpack_require__(69),findIndex=__webpack_require__(351),reject=__webpack_require__(149);var wpcom=__webpack_require__(22),Emitter=__webpack_require__(32),PopupMonitor=__webpack_require__(1808);function ConnectionsList(){if(!(this instanceof ConnectionsList)){return new ConnectionsList}this.initialized=false;this.keyringData=[];this.siteData=[]}Emitter(ConnectionsList.prototype);ConnectionsList.prototype.get=function(siteId,options){var connections;options=options||{};if(!this.initialized||options.force){this.fetchkeyringConnections()}if(siteId&&(this.siteId!==siteId||options.force)){this.fetchSiteConnections(siteId)}if(siteId){connections=filter(this.siteData,{site_ID:siteId})}else{connections=this.keyringData}if(options.keyringConnectionId){connections=filter(connections,{keyring_connection_ID:options.keyringConnectionId})}if(options.userId){connections=filter(connections,function(connection){return connection.shared||connection.keyring_connection_user_ID===options.userId})}return connections};ConnectionsList.prototype.addSiteData=function(connections,index){connections=Array.isArray(connections)?connections:[connections];connections=connections.map(this.normalizeConnection,this);if(index>=0){this.siteData.splice.apply(this.siteData,[index,0].concat(connections))}else{this.siteData=this.siteData.concat(connections)}connections.forEach(function(connection){var keyringConnection=find(this.keyringData,{keyring_connection_ID:connection.keyring_connection_ID});if(keyringConnection&&-1===keyringConnection.sites.indexOf(connection.site_ID)){keyringConnection.sites.push(connection.site_ID)}},this);this.emit("change")};ConnectionsList.prototype.addKeyringData=function(connections,index){connections=Array.isArray(connections)?connections:[connections];connections=connections.map(this.normalizeConnection,this);if(index>=0){this.keyringData.splice.apply(this.keyringData,[index,0].concat(connections))}else{this.keyringData=this.keyringData.concat(connections)}this.emit("change")};ConnectionsList.prototype.add=function(connections,siteId){if(siteId){this.addSiteData(connections)}else{this.addKeyringData(connections)}};ConnectionsList.prototype.create=function(service,siteId,keyringConnectionId,externalUserId){var keyringConnections,onConnectionUpdated;if(!this.initialized){this.once("change",this.create.bind(this,service,siteId,keyringConnectionId,externalUserId));return}if(keyringConnectionId){keyringConnections=this.get(siteId,{keyringConnectionId:keyringConnectionId});onConnectionUpdated=function(error,connection){var connections;if(error||!connection){debug("error creating ConnectionsList connection",error);this.emit("create:error");return}if(connection.connections){connections=connections.connection}else{connections=[connection]}if(siteId&&keyringConnections.length){this.siteData=reject(this.siteData,{ID:keyringConnections[0].ID})}this.add(connections,siteId);this.emit("create:success")}.bind(this);if(siteId&&keyringConnections.length){wpcom.undocumented().updateConnection(siteId,keyringConnections[0].ID,{external_user_ID:externalUserId||false},onConnectionUpdated)}else{wpcom.undocumented().createConnection(keyringConnectionId,siteId,externalUserId,{shared:false},onConnectionUpdated)}}else{this.connect(service.connect_URL)}};ConnectionsList.prototype.refresh=function(connection){var keyringConnection=find(this.keyringData,{keyring_connection_ID:connection.keyring_connection_ID});if(keyringConnection){this.isRefreshing=true;this.connect(keyringConnection.refresh_URL,connection.site_ID,function(){var isOkay=!!find(this.keyringData,{keyring_connection_ID:keyringConnection.keyring_connection_ID,status:"ok"});this.isRefreshing=false;this.emit("refresh:"+(isOkay?"success":"error"))}.bind(this))}};ConnectionsList.prototype.connect=function(url,siteId,fn){if(!this.popupMonitor){this.popupMonitor=new PopupMonitor}this.popupMonitor.open(url,null,"toolbar=0,location=0,status=0,menubar=0,"+this.popupMonitor.getScreenCenterSpecs(780,500));this.popupMonitor.once("close",function(){this.get(siteId,{force:true});this.once("change",function(){this.emit("connect");if(fn){fn()}}.bind(this))}.bind(this))};ConnectionsList.prototype.removeSiteData=function(connections){var connectionsRemoved=[],connectionIdsToRemove;connections=Array.isArray(connections)?connections:[connections];connectionIdsToRemove=connections.map(function(connection){return connection.ID});this.siteData=this.siteData.filter(function(connection){var isToBeRemoved=-1!==connectionIdsToRemove.indexOf(connection.ID),keyringConnectionIndex;if(isToBeRemoved){keyringConnectionIndex=findIndex(this.keyringData,{keyring_connection_ID:connection.keyring_connection_ID});if(-1!==keyringConnectionIndex&&1===this.keyringData[keyringConnectionIndex].sites.length){this.keyringData.splice(keyringConnectionIndex,1)}else{this.keyringData[keyringConnectionIndex].sites=without(this.keyringData[keyringConnectionIndex].sites,connection.site_ID)}connectionsRemoved.push(connection)}return!isToBeRemoved},this);this.emit("change")};ConnectionsList.prototype.removeKeyringData=function(connections){var connectionsRemoved=[],connectionIdsToRemove;connections=Array.isArray(connections)?connections:[connections];connectionIdsToRemove=map(connections,"keyring_connection_ID");this.keyringData=this.keyringData.filter(function(connection){var isToBeRemoved=-1!==connectionIdsToRemove.indexOf(connection.keyring_connection_ID);if(isToBeRemoved){this.siteData=this.siteData.filter(function(siteConnection){return connection.keyring_connection_ID!==siteConnection.keyring_connection_ID});connectionsRemoved.push(connection)}return!isToBeRemoved},this);this.emit("change")};ConnectionsList.prototype.remove=function(connections,siteId){if(siteId){this.removeSiteData(connections)}else{this.removeKeyringData(connections)}};ConnectionsList.prototype.destroy=function(connections){if(!Array.isArray(connections)){connections=[connections]}connections.forEach(function(connection){if("site_ID"in connection){wpcom.undocumented().deleteSiteConnection(connection.site_ID,connection.ID,function(error,removed){if(error&&404===error.statusCode){removed=find(this.siteData,{ID:connection.ID})}if(removed){this.removeSiteData(removed);this.emit("destroy:success")}else{this.emit("destroy:error")}}.bind(this))}else{wpcom.undocumented().deletekeyringConnection(connection.keyring_connection_ID,function(error,removed){if(error&&404===error.statusCode){removed=find(this.keyringData,{keyring_connection_ID:connection.keyring_connection_ID})}if(removed&&removed.ID){removed=this.normalizeConnection(removed)}if(removed){this.removeKeyringData(removed);this.emit("destroy:success")}else{this.emit("destroy:error")}}.bind(this))}},this)};ConnectionsList.prototype.update=function(connection,attributes){wpcom.undocumented().updateConnection(connection.site_ID,connection.ID,attributes,function(error,data){var existingConnectionIndex;if(error){debug("error updating ConnectionsList connection",error);this.emit("update:error");return}existingConnectionIndex=findIndex(this.siteData,{ID:data.ID});this.siteData.splice(existingConnectionIndex,1);this.addSiteData(data,existingConnectionIndex);this.emit("update:success")}.bind(this))};ConnectionsList.prototype.fetchkeyringConnections=function(){if(!this.fetchingKeyring){this.fetchingKeyring=true;wpcom.undocumented().mekeyringConnections(function(error,data){this.fetchingKeyring=false;this.updateInitialized();if(error){debug("error fetching ConnectionsList Keyring connections from api",error);return}this.keyringData=this.parse(data);if(!this.fetchingSite){this.emit("change")}}.bind(this))}};ConnectionsList.prototype.fetchSiteConnections=function(siteId){if(!this.fetchingSite||this.siteId!==siteId){this.fetchingSite=true;this.siteId=siteId;wpcom.undocumented().siteConnections(siteId,function(error,data){this.fetchingSite=false;this.updateInitialized();if(error){debug("error fetching ConnectionsList site publicize connections from api",error);return}this.siteData=this.parse(data);if(!this.fetchingKeyring){this.emit("change")}}.bind(this))}};ConnectionsList.prototype.updateInitialized=function(){if(!this.fetchingSite&&!this.fetchingKeyring){this.initialized=true}};ConnectionsList.prototype.parse=function(data){var list=data.connections||[];return list.map(this.normalizeConnection,this)};ConnectionsList.prototype.normalizeConnection=function(connection){if(connection.read_only){return connection}if(connection.ID&&!connection.keyring_connection_ID){connection.keyring_connection_ID=connection.ID;delete connection.ID;connection.keyring_connection_user_ID=connection.user_ID;delete connection.user_ID}if(!Array.isArray(connection.sites)){connection.sites=[];if(connection.site_ID){connection.sites.push(connection.site_ID)}}return connection};module.exports=ConnectionsList},1897:function(module,exports,__webpack_require__){"use strict";var PostTypesList=__webpack_require__(1898),_postTypes;module.exports=function(){if(!_postTypes){_postTypes=new PostTypesList}return _postTypes}},1898:function(module,exports,__webpack_require__){"use strict";var debug=__webpack_require__(4)("calypso:post-types-list");var wpcom=__webpack_require__(22),Emitter=__webpack_require__(32);function PostTypesList(){if(!(this instanceof PostTypesList)){return new PostTypesList}}Emitter(PostTypesList.prototype);PostTypesList.prototype.get=function(siteId){if(!this.data||this.siteId!==siteId){this.fetch(siteId);return[]}return this.data};PostTypesList.prototype.fetch=function(siteId){if(!this.fetching||this.siteId!==siteId){this.fetching=true;this.siteId=siteId;debug("getting PostTypesList from api");wpcom.site(siteId).postTypesList(function(error,data){if(error){debug("error fetching PostTypesList from api",error);return}this.data=this.parse(data);this.emit("change");this.fetching=false}.bind(this))}};PostTypesList.prototype.parse=function(data){return data.post_types};PostTypesList.prototype.hasDataForSiteId=function(siteId){return this.data&&this.siteId===siteId};module.exports=PostTypesList},1944:function(module,exports,__webpack_require__){"use strict";var _keys=__webpack_require__(44);var _keys2=_interopRequireDefault(_keys);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}var last=__webpack_require__(252);var connectionsList=__webpack_require__(1653)(),sites=__webpack_require__(55)();module.exports={isServiceForPublicize:function isServiceForPublicize(){return false},getConnections:function getConnections(connections,serviceName,siteId){var site=siteId?sites.getSite(siteId):sites.getSelectedSite();if(!site||!site.settings){return[]}return connections.filter(function(connection){return site.settings.eventbrite_api_token===connection.keyring_connection_ID})},didKeyringConnectionSucceed:function didKeyringConnectionSucceed(value,serviceName,siteId){var site=siteId?sites.getSite(siteId):sites.getSelectedSite(),connection=last(this.getAvailableExternalAccounts(serviceName,siteId));if(site&&connection){site.saveSettings({eventbrite_api_token:connection.keyringConnectionId},function(error,data){var success=!error&&(0,_keys2.default)(data.updated).length;connectionsList.emit("create:"+(success?"success":"error"))})}return value},filterConnectionToRemove:function filterConnectionToRemove(shouldDestroy,connection,siteId){var site=siteId?sites.getSite(siteId):sites.getSelectedSite();if(site){site.saveSettings({eventbrite_api_token:""},function(error,data){var success=!error&&(0,_keys2.default)(data.updated).length;connectionsList.emit("destroy:"+(success?"success":"error"))})}return false}}},1945:function(module,exports,__webpack_require__){"use strict";module.exports={eventbrite:__webpack_require__(1944)}},2170:function(module,exports,__webpack_require__){"use strict";var _extends2=__webpack_require__(19);var _extends3=_interopRequireDefault(_extends2);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}var React=__webpack_require__(1),classNames=__webpack_require__(11);module.exports=React.createClass({displayName:"SharingButtonsPreviewAction",propTypes:{active:React.PropTypes.bool,position:React.PropTypes.oneOf(["top-left","top-right","bottom-left","bottom-right"]),icon:React.PropTypes.string,onClick:React.PropTypes.func},getDefaultProps:function getDefaultProps(){return{active:true,position:"top-left",onClick:function onClick(){}}},getIconElement:function getIconElement(){if(this.props.icon){return React.createElement("span",{className:"noticon noticon-"+this.props.icon})}},render:function render(){var classes=classNames("sharing-buttons-preview-action",{"is-active":this.props.active,"is-top":0===this.props.position.indexOf("top"),"is-right":-1!==this.props.position.indexOf("-right"),"is-bottom":0===this.props.position.indexOf("bottom"),"is-left":-1!==this.props.position.indexOf("-left")});return React.createElement("button",(0,_extends3.default)({type:"button",className:classes},this.props),this.getIconElement(),this.props.children)}})},2171:function(module,exports,__webpack_require__){"use strict";var React=__webpack_require__(1),classNames=__webpack_require__(11),photon=__webpack_require__(687);var analytics=__webpack_require__(16),SocialLogo=__webpack_require__(699);module.exports=React.createClass({displayName:"SharingButtonsPreviewButton",propsTypes:{button:React.PropTypes.object.isRequired,style:React.PropTypes.oneOf(["icon-text","icon","text","official"]),enabled:React.PropTypes.bool,onMouseOver:React.PropTypes.func,onClick:React.PropTypes.func},getDefaultProps:function getDefaultProps(){return{style:"icon",enabled:true,onClick:function onClick(){}}},getIcon:function getIcon(){var shortnameToSocialLogo={email:"mail","google-plus-1":"google-plus-alt",pinterest:"pinterest-alt",tumblr:"tumblr-alt","jetpack-whatsapp":"whatsapp","press-this":"wordpress",twitter:"twitter-alt",more:"share"};if(!this.props.button.custom){var icon=shortnameToSocialLogo[this.props.button.ID]||this.props.button.shortname;return React.createElement(SocialLogo,{icon:icon,size:18})}else if("string"===typeof this.props.button.icon){return React.createElement("span",{className:"sharing-buttons-preview-button__custom-icon",style:{backgroundImage:"url("+photon(this.props.button.icon,{width:16})+")"}})}},onClick:function onClick(){analytics.ga.recordEvent("Sharing","Clicked Share Button",this.props.button.ID);this.props.onClick()},render:function render(){var classes=classNames("sharing-buttons-preview-button","style-"+this.props.style,"share-"+this.props.button.ID,{"is-enabled":this.props.enabled,"is-custom":this.props.button.custom});return React.createElement("div",{className:classes,onClick:this.onClick,onMouseOver:this.props.onMouseOver},this.getIcon(),React.createElement("span",{className:"sharing-buttons-preview-button__service"},this.props.button.name))}})},2172:function(module,exports,__webpack_require__){"use strict";var _freeze=__webpack_require__(247);var _freeze2=_interopRequireDefault(_freeze);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}var ReactDom=__webpack_require__(43),React=__webpack_require__(1),filter=__webpack_require__(69),isEqual=__webpack_require__(92),classNames=__webpack_require__(11);var ButtonsPreviewButton=__webpack_require__(2171),ResizableIframe=__webpack_require__(1797),previewWidget=__webpack_require__(2667),touchDetect=__webpack_require__(155);var SharingButtonsPreviewButtons=module.exports=React.createClass({displayName:"SharingButtonsPreviewButtons",propTypes:{buttons:React.PropTypes.array,visibility:React.PropTypes.oneOf(["hidden","visible"]),style:React.PropTypes.oneOf(["icon","icon-text","text","official"]),onButtonClick:React.PropTypes.func,showMore:React.PropTypes.bool,forceMorePreviewVisible:React.PropTypes.bool},getDefaultProps:function getDefaultProps(){return{buttons:(0,_freeze2.default)([]),style:"icon",onButtonClick:function onButtonClick(){},showMore:false,forceMorePreviewVisible:false}},getInitialState:function getInitialState(){return{morePreviewOffset:null,morePreviewVisible:false}},componentDidMount:function componentDidMount(){this.maybeListenForWidgetMorePreview();this.updateMorePreviewVisibility();document.addEventListener("click",this.hideMorePreview)},componentDidUpdate:function componentDidUpdate(prevProps){this.maybeListenForWidgetMorePreview();if(prevProps.forceMorePreviewVisible!==this.props.forceMorePreviewVisible||!isEqual(prevProps.buttons,this.props.buttons)){this.updateMorePreviewVisibility()}},componentWillUnmount:function componentWillUnmount(){window.removeEventListener("message",this.detectWidgetPreviewChanges);document.removeEventListener("click",this.hideMorePreview)},maybeListenForWidgetMorePreview:function maybeListenForWidgetMorePreview(){if("official"===this.props.style&&this.props.showMore){window.removeEventListener("message",this.detectWidgetPreviewChanges);window.addEventListener("message",this.detectWidgetPreviewChanges)}},detectWidgetPreviewChanges:function detectWidgetPreviewChanges(event){var preview,offset;if(!this.refs.iframe){return}preview=ReactDom.findDOMNode(this.refs.iframe);var data=void 0;try{data=JSON.parse(event.data)}catch(error){}if(data&&event.source===preview.contentWindow){if("more-show"===data.action){offset={top:preview.offsetTop,left:preview.offsetLeft};offset.top+=data.rect.top+data.height;offset.left+=data.rect.left;this.setState({morePreviewOffset:offset,morePreviewVisible:true})}else if("more-hide"===data.action){this.hideMorePreview()}else if("more-toggle"===data.action){this.toggleMorePreview()}else if("resize"===data.action){this.updateMorePreviewVisibility()}}},updateMorePreviewVisibility:function updateMorePreviewVisibility(){if(!this.props.forceMorePreviewVisible){this.hideMorePreview()}else{this.showMorePreview()}},showMorePreview:function showMorePreview(event){var moreButton,offset;if(event&&(event.currentTarget.contains(event.relatedTarget)||touchDetect.hasTouch())){return}if("official"===this.props.style){ReactDom.findDOMNode(this.refs.iframe).contentWindow.postMessage("more-show","*")}else{moreButton=ReactDom.findDOMNode(this.refs.moreButton);offset={top:moreButton.offsetTop+moreButton.clientHeight,left:moreButton.offsetLeft};this.setState({morePreviewOffset:offset,morePreviewVisible:true})}},toggleMorePreview:function toggleMorePreview(event){if(event){event.nativeEvent.stopImmediatePropagation()}if(this.state.morePreviewVisible){this.hideMorePreview()}else{this.showMorePreview()}},hideMorePreview:function hideMorePreview(){if(!this.props.forceMorePreviewVisible&&this.state.morePreviewVisible){this.setState({morePreviewVisible:false})}},getOfficialPreviewElement:function getOfficialPreviewElement(){var buttons=filter(this.props.buttons,{visibility:this.props.visibility}),previewUrl=previewWidget.generatePreviewUrlFromButtons(buttons,this.props.showMore);return React.createElement(ResizableIframe,{ref:"iframe",src:previewUrl,width:"100%",frameBorder:"0",className:"official-preview"})},getCustomPreviewElement:function getCustomPreviewElement(){var buttons=this.props.buttons.map(function(button){return React.createElement(ButtonsPreviewButton,{key:button.ID,button:button,enabled:button.visibility===this.props.visibility,style:this.props.style,onClick:this.props.onButtonClick.bind(null,button)})},this);if(this.props.showMore){buttons.push(React.createElement(ButtonsPreviewButton,{ref:"moreButton",key:"more",button:{ID:"more",name:this.translate("More"),genericon:"\\f415"},style:"icon"===this.props.style?"icon-text":this.props.style,onMouseOver:this.showMorePreview,onClick:this.toggleMorePreview}))}return buttons},getMorePreviewElement:function getMorePreviewElement(){var classes,hiddenButtons;if(!this.props.showMore){return}classes=classNames("sharing-buttons-preview-buttons__more",{"is-visible":this.state.morePreviewVisible});hiddenButtons=filter(this.props.buttons,{visibility:"hidden"});return React.createElement("div",{ref:"more",className:classes,style:this.state.morePreviewOffset},React.createElement("div",{className:"sharing-buttons-preview-buttons__more-inner"},React.createElement(SharingButtonsPreviewButtons,{buttons:hiddenButtons,visibility:"hidden",style:this.props.style,showMore:false})))},render:function render(){return React.createElement("div",{className:"sharing-buttons-preview-buttons"},"official"===this.props.style?this.getOfficialPreviewElement():this.getCustomPreviewElement(),this.getMorePreviewElement())}})},2301:function(module,exports,__webpack_require__){"use strict";var _extends2=__webpack_require__(19);var _extends3=_interopRequireDefault(_extends2);var _keys=__webpack_require__(44);var _keys2=_interopRequireDefault(_keys);var _freeze=__webpack_require__(247);var _freeze2=_interopRequireDefault(_freeze);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}var React=__webpack_require__(1),omit=__webpack_require__(18),debug=__webpack_require__(4)("calypso:forms:multi-checkbox");var MultiCheckbox=module.exports=React.createClass({displayName:"MultiCheckbox",propTypes:{defaultChecked:React.PropTypes.array,onChange:React.PropTypes.func,disabled:React.PropTypes.bool},getInitialState:function getInitialState(){return{initialChecked:this.props.defaultChecked}},getDefaultProps:function getDefaultProps(){return{defaultChecked:(0,_freeze2.default)([]),onChange:function onChange(){},disabled:false}},componentWillMount:function componentWillMount(){debug("Mounting "+this.constructor.displayName+" React component.")},handleChange:function handleChange(event){var target=event.target,checked=this.props.checked||this.state.initialChecked;checked=checked.concat([target.value]).filter(function(currentValue){return currentValue!==target.value||target.checked});this.props.onChange({value:checked});event.stopPropagation()},getCheckboxElements:function getCheckboxElements(){var checked=this.props.checked||this.state.initialChecked;return this.props.options.map(function(option){var isChecked=checked.indexOf(option.value)!==-1;return React.createElement("label",{key:option.value},React.createElement("input",{name:this.props.name+"[]",type:"checkbox",value:option.value,checked:isChecked,onChange:this.handleChange,disabled:this.props.disabled}),React.createElement("span",null,option.label))},this)},render:function render(){return React.createElement("div",(0,_extends3.default)({className:"form-checkbox-group"},omit(this.props,(0,_keys2.default)(MultiCheckbox.propTypes))),this.getCheckboxElements())}})},2432:function(module,exports,__webpack_require__){"use strict";var ServicesList=__webpack_require__(2433),_services;module.exports=function(){if(!_services){_services=new ServicesList}return _services}},2433:function(module,exports,__webpack_require__){"use strict";var _keys=__webpack_require__(44);var _keys2=_interopRequireDefault(_keys);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}var debug=__webpack_require__(4)("calypso:services-list");var wpcom=__webpack_require__(22),Emitter=__webpack_require__(32);function ServicesList(){if(!(this instanceof ServicesList)){return new ServicesList}this.initialized=false}Emitter(ServicesList.prototype);ServicesList.prototype.get=function(){if(!this.data){this.data=[];this.fetch()}return this.data};ServicesList.prototype.fetch=function(){if(!this.fetching){debug("getting ServicesList from api");this.fetching=true;wpcom.undocumented().metaKeyring(function(error,data){if(error){debug("error fetching ServicesList from api",error);return}this.initialized=true;this.fetching=false;this.data=this.parse(data);this.emit("change")}.bind(this))}};ServicesList.prototype.parse=function(data){return(0,_keys2.default)(data.services).map(function(serviceName){var service=data.services[serviceName];service.name=serviceName;return service})};module.exports=ServicesList},2434:function(module,exports,__webpack_require__){"use strict";var debug=__webpack_require__(4)("calypso:sharing-buttons-list"),uniqBy=__webpack_require__(706),orderBy=__webpack_require__(3189),findIndex=__webpack_require__(351);var wpcom=__webpack_require__(22),Emitter=__webpack_require__(32);function SharingButtonsList(){if(!(this instanceof SharingButtonsList)){return new SharingButtonsList}}Emitter(SharingButtonsList.prototype);SharingButtonsList.prototype.get=function(siteId){if(!this.data||this.siteId!==siteId){this.fetch(siteId);return[]}return this.data};SharingButtonsList.prototype.fetch=function(siteId){if(!this.fetching){this.fetching=true;debug("getting SharingButtonsList from api");wpcom.undocumented().sharingButtons(siteId,function(error,data){if(error){debug("error fetching SharingButtonsList from api",error);return}this.siteId=siteId;this.data=data.sharing_buttons;this.emit("change");this.fetching=false}.bind(this))}};SharingButtonsList.prototype.save=function(siteId,buttons,callback){var remainingToBeSaved;if(this.saving){return}this.saving=true;if(!Array.isArray(buttons)){buttons=[buttons]}remainingToBeSaved=buttons.length;debug("saving SharingButtonsList to api");buttons.forEach(function(button){wpcom.undocumented().saveSharingButton(siteId,button,function(error,data){var existingButtonIndex;if(error){debug("error saving SharingButtonsList to api",error);this.saving=false;callback(error);return}existingButtonIndex=findIndex(this.data,{ID:data.ID});if(-1!==existingButtonIndex){this.data.splice(existingButtonIndex,1,data)}if(!--remainingToBeSaved){this.emit("change");this.saving=false;callback(null)}}.bind(this))},this)};SharingButtonsList.prototype.saveAll=function(siteId,buttons,callback){if(this.saving||!siteId||!buttons){return}this.saving=true;debug("saving SharingButtonsList to api");wpcom.undocumented().saveSharingButtons(siteId,buttons,function(error,data){if(error||!data.updated){debug("error saving SharingButtonsList to api",error);this.saving=false;callback(error);return}data.updated=orderBy(data.updated,"enabled","desc");this.data=uniqBy(data.updated.concat(this.data),"ID");this.emit("change");this.saving=false;callback(null)}.bind(this))};SharingButtonsList.prototype.hasDataForSiteId=function(siteId){return this.data&&this.siteId===siteId};module.exports=SharingButtonsList},2662:function(module,exports,__webpack_require__){"use strict";var _freeze=__webpack_require__(247);var _freeze2=_interopRequireDefault(_freeze);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}var React=__webpack_require__(1);
var ButtonsPreview=__webpack_require__(2668),ButtonsPreviewPlaceholder=__webpack_require__(2666),ButtonsStyle=__webpack_require__(2669),analytics=__webpack_require__(16);module.exports=React.createClass({displayName:"SharingButtonsAppearance",propTypes:{site:React.PropTypes.object.isRequired,buttons:React.PropTypes.array,values:React.PropTypes.object,onChange:React.PropTypes.func,onButtonsChange:React.PropTypes.func,onButtonsSave:React.PropTypes.func,initialized:React.PropTypes.bool,saving:React.PropTypes.bool},getDefaultProps:function getDefaultProps(){return{buttons:(0,_freeze2.default)([]),values:(0,_freeze2.default)({}),onChange:function onChange(){},onButtonsChange:function onButtonsChange(){},initialized:false,saving:false}},onReblogsLikesCheckboxClicked:function onReblogsLikesCheckboxClicked(event){this.props.onChange(event.target.name,!event.target.checked);if("disabled_reblogs"===event.target.name){analytics.ga.recordEvent("Sharing","Clicked Show Reblog Button Checkbox","checked",event.target.checked?1:0)}else if("disabled_likes"===event.target.name){analytics.ga.recordEvent("Sharing","Clicked Show Like Button Checkbox","checked",event.target.checked?1:0)}},getPreviewElement:function getPreviewElement(){if(this.props.initialized){return React.createElement(ButtonsPreview,{site:this.props.site,style:this.props.values.sharing_button_style,label:this.props.values.sharing_label,buttons:this.props.buttons,showLike:(!this.props.site.jetpack||this.props.site.isModuleActive("likes"))&&(""===this.props.values.disabled_likes||false===this.props.values.disabled_likes),showReblog:!this.props.site.jetpack&&(""===this.props.values.disabled_reblogs||false===this.props.values.disabled_reblogs),onLabelChange:this.props.onChange.bind(null,"sharing_label"),onButtonsChange:this.props.onButtonsChange})}else{return React.createElement(ButtonsPreviewPlaceholder,null)}},getReblogOptionElement:function getReblogOptionElement(){if(!this.props.site.jetpack){return React.createElement("label",null,React.createElement("input",{name:"disabled_reblogs",type:"checkbox",checked:""===this.props.values.disabled_reblogs||false===this.props.values.disabled_reblogs,onChange:this.onReblogsLikesCheckboxClicked,disabled:!this.props.initialized}),React.createElement("span",null,this.translate("Show reblog button",{context:"Sharing options: Checkbox label"})))}},getReblogLikeOptionsElement:function getReblogLikeOptionsElement(){if(!this.props.site.jetpack||this.props.site.isModuleActive("likes")){return React.createElement("fieldset",{className:"sharing-buttons__fieldset"},React.createElement("legend",{className:"sharing-buttons__fieldset-heading"},this.translate("Reblog & Like",{context:"Sharing options: Header"})),this.getReblogOptionElement(),React.createElement("label",null,React.createElement("input",{name:"disabled_likes",type:"checkbox",checked:""===this.props.values.disabled_likes||false===this.props.values.disabled_likes,onChange:this.onReblogsLikesCheckboxClicked,disabled:!this.props.initialized}),React.createElement("span",null,this.translate("Show like button",{context:"Sharing options: Checkbox label"}))))}},render:function render(){return React.createElement("div",{className:"sharing-buttons__panel sharing-buttons-appearance"},React.createElement("p",{className:"sharing-buttons-appearance__description"},this.translate("Allow readers to easily share your posts with others by adding sharing buttons throughout your site.")),this.getPreviewElement(),React.createElement("div",{className:"sharing-buttons__fieldset-group"},React.createElement(ButtonsStyle,{onChange:this.props.onChange.bind(null,"sharing_button_style"),value:this.props.values.sharing_button_style,disabled:!this.props.initialized}),this.getReblogLikeOptionsElement()),React.createElement("button",{type:"submit",className:"button is-primary sharing-buttons__submit",disabled:this.props.saving||!this.props.initialized},this.props.saving?this.translate("Saving…"):this.translate("Save Changes")))}})},2663:function(module,exports,__webpack_require__){"use strict";var React=__webpack_require__(1),assign=__webpack_require__(29),async=__webpack_require__(688);var observe=__webpack_require__(146),ButtonsAppearance=__webpack_require__(2662),ButtonsOptions=__webpack_require__(2665),notices=__webpack_require__(71),analytics=__webpack_require__(16),protectForm=__webpack_require__(650).mixin;module.exports=React.createClass({displayName:"SharingButtons",mixins:[observe("site","buttons","postTypes"),protectForm],propTypes:{site:React.PropTypes.object.isRequired,buttons:React.PropTypes.object.isRequired,postTypes:React.PropTypes.object.isRequired},getInitialState:function getInitialState(){return{values:{},isSaving:false,buttonsPendingSave:null}},saveChanges:function saveChanges(event){var tasks=[this.props.site.saveSettings.bind(this.props.site,this.state.values)];if(this.state.buttonsPendingSave){tasks.push(this.props.buttons.saveAll.bind(this.props.buttons,this.props.site.ID,this.state.buttonsPendingSave))}async.parallel(tasks,this.onSaveComplete);this.setState({isSaving:true});analytics.ga.recordEvent("Sharing","Clicked Save Changes Button");event.preventDefault()},onSaveComplete:function onSaveComplete(error){if(error){notices.error(this.translate("There was a problem saving your changes. Please, try again."))}else{notices.success(this.translate("Settings saved successfully!"))}this.markSaved();this.setState({values:{},isSaving:false,buttonsPendingSave:null})},handleChange:function handleChange(option,value){var pairs;if(undefined===value){pairs=option}else{pairs={};pairs[option]=value}this.markChanged();this.setState({values:assign({},this.state.values,pairs)})},handleButtonsChange:function handleButtonsChange(buttons){this.markChanged();this.setState({buttonsPendingSave:buttons})},getPreviewButtons:function getPreviewButtons(){return this.state.buttonsPendingSave||this.props.buttons.get(this.props.site.ID)},isInitialized:function isInitialized(sources){return sources.every(function(source){if("settings"===source){return this.props.site.settings}else{return this.props[source].hasDataForSiteId(this.props.site.ID)}},this)},render:function render(){var settings=assign({},this.props.site.settings,this.state.values);return React.createElement("form",{onSubmit:this.saveChanges,id:"sharing-buttons",className:"sharing-settings sharing-buttons"},React.createElement(ButtonsAppearance,{site:this.props.site,buttons:this.getPreviewButtons(),values:settings,onChange:this.handleChange,onButtonsChange:this.handleButtonsChange,initialized:this.isInitialized(["settings","buttons"]),saving:this.state.isSaving}),React.createElement(ButtonsOptions,{site:this.props.site,postTypes:this.props.postTypes.get(this.props.site.ID),buttons:this.props.buttons.get(this.props.site.ID),values:settings,onChange:this.handleChange,initialized:this.isInitialized(["settings","postTypes"]),saving:this.state.isSaving}))}})},2664:function(module,exports,__webpack_require__){"use strict";var React=__webpack_require__(1),classNames=__webpack_require__(11);var decodeEntities=__webpack_require__(83).decodeEntities;var SharingButtonsLabelEditor=module.exports=React.createClass({displayName:"SharingButtonsLabelEditor",propTypes:{active:React.PropTypes.bool,value:React.PropTypes.string,onChange:React.PropTypes.func,onClose:React.PropTypes.func,hasEnabledButtons:React.PropTypes.bool},statics:{closeKeyCodes:[13,27]},getDefaultProps:function getDefaultProps(){return{active:false,value:"",onChange:function onChange(){},onClose:function onClose(){},hasEnabledButtons:true}},onKeyDown:function onKeyDown(event){if(-1!==SharingButtonsLabelEditor.closeKeyCodes.indexOf(event.keyCode)){event.target.blur();event.preventDefault();this.props.onClose()}},onInputChange:function onInputChange(event){this.props.onChange(event.target.value)},getNoButtonsNoticeElement:function getNoButtonsNoticeElement(){if(!this.props.hasEnabledButtons){return React.createElement("em",{className:"sharing-buttons-preview__panel-notice"},this.translate("This text won't appear until you add at least one sharing button.",{context:"Sharing: Buttons"}))}},render:function render(){var classes=classNames("sharing-buttons-preview__panel","is-top","sharing-buttons-label-editor",{"is-active":this.props.active});return React.createElement("div",{className:classes},React.createElement("div",{className:"sharing-buttons-preview__panel-content"},React.createElement("h3",{className:"sharing-buttons-preview__panel-heading"},this.translate("Edit label text",{context:"Sharing: buttons"})),React.createElement("p",{className:"sharing-buttons-preview__panel-instructions"},this.translate("Change the text of the sharing buttons label")),React.createElement("input",{type:"text",value:decodeEntities(this.props.value),onKeyDown:this.onKeyDown,onChange:this.onInputChange,className:"sharing-buttons-label-editor__input"}),this.getNoButtonsNoticeElement()),React.createElement("footer",{className:"sharing-buttons-preview__panel-actions"},React.createElement("button",{type:"button",className:"button",onClick:this.props.onClose},this.translate("Close"))))}})},2665:function(module,exports,__webpack_require__){"use strict";var _freeze=__webpack_require__(247);var _freeze2=_interopRequireDefault(_freeze);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}var React=__webpack_require__(1),some=__webpack_require__(82),xor=__webpack_require__(3201);var MultiCheckbox=__webpack_require__(2301),analytics=__webpack_require__(16);module.exports=React.createClass({displayName:"SharingButtonsOptions",propTypes:{site:React.PropTypes.object.isRequired,buttons:React.PropTypes.array,postTypes:React.PropTypes.array,values:React.PropTypes.object,onChange:React.PropTypes.func,initialized:React.PropTypes.bool,saving:React.PropTypes.bool},getDefaultProps:function getDefaultProps(){return{values:(0,_freeze2.default)({}),onChange:function onChange(){},initialized:false,saving:false}},getSanitizedTwitterUsername:function getSanitizedTwitterUsername(username){return username?"@"+username.replace(/\W/g,"").substr(0,15):""},trackTwitterViaAnalyticsEvent:function trackTwitterViaAnalyticsEvent(){analytics.ga.recordEvent("Sharing","Focussed Twitter Username Field")},handleMultiCheckboxChange:function handleMultiCheckboxChange(name,event){var delta=xor(this.props.values.sharing_show,event.value),checked;this.props.onChange(name,event.value.length?event.value:null);if(delta.length){checked=-1!==event.value.indexOf(delta[0]);analytics.ga.recordEvent("Sharing","Clicked Show Sharing Buttons On Page Checkbox",delta[0],checked?1:0)}},handleTwitterViaChange:function handleTwitterViaChange(event){this.props.onChange(event.target.name,this.getSanitizedTwitterUsername(event.target.value))},handleChange:function handleChange(event){var value;if("checkbox"===event.target.type){value=event.target.checked}else{value=event.target.value}if("jetpack_comment_likes_enabled"===event.target.name){analytics.ga.recordEvent("Sharing","Clicked Comment Likes On For All Posts Checkbox","checked",event.target.checked?1:0)}this.props.onChange(event.target.name,value)},getPostTypeLabel:function getPostTypeLabel(postType){var label;switch(postType.name){case"index":label=this.translate("Front Page, Archive Pages, and Search Results",{context:"jetpack"});break;case"post":label=this.translate("Posts");break;case"page":label=this.translate("Pages");break;case"attachment":label=this.translate("Media");break;case"portfolio":label=this.translate("Portfolio Items");break;default:label=postType.label}return label},getDisplayOptions:function getDisplayOptions(){return[{name:"index"}].concat(this.props.postTypes).map(function(postType){return{value:postType.name,label:this.getPostTypeLabel(postType)}},this)},isTwitterButtonEnabled:function isTwitterButtonEnabled(){return some(this.props.buttons,{ID:"twitter",enabled:true})},getTwitterViaOptionElement:function getTwitterViaOptionElement(){var option;if(!this.isTwitterButtonEnabled()||this.props.site.jetpack&&this.props.site.versionCompare("3.4-dev","<")){return}option=this.props.site.jetpack?"jetpack-twitter-cards-site-tag":"twitter_via";return React.createElement("fieldset",{className:"sharing-buttons__fieldset"},React.createElement("legend",{className:"sharing-buttons__fieldset-heading"},this.translate("Twitter username")),React.createElement("input",{name:option,type:"text",placeholder:"@"+this.translate("username",{textOnly:true}),value:this.getSanitizedTwitterUsername(this.props.values[option]),onChange:this.handleTwitterViaChange,onFocus:this.trackTwitterViaAnalyticsEvent,disabled:!this.props.initialized}),React.createElement("p",{className:"sharing-buttons__fieldset-detail"},this.translate("This will be included in tweets when people share using the Twitter button.")))},getCommentLikesOptionElement:function getCommentLikesOptionElement(){if(this.props.site.jetpack){return}return React.createElement("fieldset",{className:"sharing-buttons__fieldset"},React.createElement("legend",{className:"sharing-buttons__fieldset-heading"},this.translate("Comment Likes",{context:"Sharing options: Header"})),React.createElement("label",null,React.createElement("input",{name:"jetpack_comment_likes_enabled",type:"checkbox",checked:this.props.values.jetpack_comment_likes_enabled,onChange:this.handleChange,disabled:!this.props.initialized}),React.createElement("span",null,this.translate("On for all posts",{context:"Sharing options: Comment Likes"}))))},render:function render(){return React.createElement("div",{className:"sharing-buttons__panel"},React.createElement("h4",null,this.translate("Options")),React.createElement("div",{className:"sharing-buttons__fieldset-group"},React.createElement("fieldset",{className:"sharing-buttons__fieldset"},React.createElement("legend",{className:"sharing-buttons__fieldset-heading"},this.translate("Show sharing buttons on",{context:"Sharing options: Header",comment:'Possible values are: "Front page, Archive Pages, and Search Results", "Posts", "Pages", "Media"'})),React.createElement(MultiCheckbox,{name:"sharing_show",options:this.getDisplayOptions(),checked:this.props.values.sharing_show,onChange:this.handleMultiCheckboxChange.bind(null,"sharing_show"),disabled:!this.props.initialized})),this.getCommentLikesOptionElement(),this.getTwitterViaOptionElement()),React.createElement("button",{type:"submit",className:"button is-primary sharing-buttons__submit",disabled:this.props.saving||!this.props.initialized},this.props.saving?this.translate("Saving…"):this.translate("Save Changes")))}})},2666:function(module,exports,__webpack_require__){"use strict";var React=__webpack_require__(1);var ButtonsPreviewAction=__webpack_require__(2170);module.exports=React.createClass({displayName:"SharingButtonsPreviewPlaceholder",render:function render(){return React.createElement("div",{className:"sharing-buttons-preview is-placeholder"},React.createElement(ButtonsPreviewAction,{icon:"edit",position:"top-left",disabled:true},this.translate("Edit label text",{context:"Sharing: Buttons edit label"})),React.createElement("h2",{className:"sharing-buttons-preview__heading"},this.translate("Preview")),React.createElement("div",{className:"sharing-buttons-preview__display"},React.createElement("span",{className:"sharing-buttons-preview__label"}),React.createElement("div",{className:"sharing-buttons-preview__buttons"}),React.createElement("div",{className:"sharing-buttons-preview__reblog-like"},React.createElement("a",{className:"sharing-buttons-preview-button is-enabled style-icon-text sharing-buttons-preview__reblog"},React.createElement("span",{className:"noticon noticon-reblog"}),this.translate("Reblog")),React.createElement("a",{className:"sharing-buttons-preview-button is-enabled style-icon-text sharing-buttons-preview__like"},React.createElement("span",{className:"noticon noticon-like"}),this.translate("Like")),React.createElement("div",{className:"sharing-buttons-preview__fake-user"},React.createElement("img",{src:"https://1.gravatar.com/avatar/767fc9c115a1b989744c755db47feb60"})),React.createElement("div",{className:"sharing-buttons-preview__fake-like"},this.translate("One blogger likes this")))),React.createElement("div",{className:"sharing-buttons-preview__button-tray-actions"},React.createElement(ButtonsPreviewAction,{icon:"edit",position:"bottom-left",disabled:true},this.translate("Edit visible buttons",{context:"Sharing: Buttons edit label"})),React.createElement(ButtonsPreviewAction,{icon:"edit",position:"bottom-left",disabled:true},this.translate("Edit “More” buttons",{context:"Sharing: Buttons edit label"}))))}})},2667:function(module,exports,__webpack_require__){"use strict";var qs=__webpack_require__(113),i18n=__webpack_require__(13);var baseUrl="//widgets.wp.com/sharing-buttons-preview/";module.exports={generatePreviewUrlFromButtons:function generatePreviewUrlFromButtons(buttons,showMore){var numberOfCustomButtons=0,query={};buttons.forEach(function(button){var index;if(button.custom){index=numberOfCustomButtons++;query["custom["+index+"][name]"]=encodeURIComponent(button.name);query["custom["+index+"][icon]"]=encodeURIComponent(button.icon)}else{query["service[]"]=query["service[]"]||[];query["service[]"].push(button.ID)}});if(showMore){query.more=i18n.translate("More")}return baseUrl+"?"+qs.stringify(query)}}},2668:function(module,exports,__webpack_require__){"use strict";var React=__webpack_require__(1),some=__webpack_require__(82),filter=__webpack_require__(69);var ButtonsLabelEditor=__webpack_require__(2664),ButtonsPreviewButtons=__webpack_require__(2172),ButtonsPreviewAction=__webpack_require__(2170),ButtonsTray=__webpack_require__(2670),decodeEntities=__webpack_require__(83).decodeEntities,analytics=__webpack_require__(16);module.exports=React.createClass({displayName:"SharingButtonsPreview",propTypes:{site:React.PropTypes.object.isRequired,style:React.PropTypes.oneOf(["icon-text","icon","text","official"]),label:React.PropTypes.string,buttons:React.PropTypes.array,showLike:React.PropTypes.bool,showReblog:React.PropTypes.bool,onLabelChange:React.PropTypes.func,onButtonsChange:React.PropTypes.func},getInitialState:function getInitialState(){return{isEditingLabel:false,buttonsTrayVisibility:null}},getDefaultProps:function getDefaultProps(){return{style:"icon",buttons:[],showLike:true,showReblog:true,onLabelChange:function onLabelChange(){},onButtonsChange:function onButtonsChange(){}}},toggleEditLabel:function toggleEditLabel(){var isEditingLabel=!this.state.isEditingLabel;this.setState({isEditingLabel:isEditingLabel});if(isEditingLabel){this.hideButtonsTray();analytics.ga.recordEvent("Sharing","Clicked Edit Text Link")}else{analytics.ga.recordEvent("Sharing","Clicked Edit Text Done Button")}},showButtonsTray:function showButtonsTray(visibility){this.setState({isEditingLabel:false,buttonsTrayVisibility:visibility});analytics.ga.recordEvent("Sharing","Clicked Edit Buttons Links",visibility)},hideButtonsTray:function hideButtonsTray(){if(!this.state.buttonsTrayVisibility){return}this.setState({buttonsTrayVisibility:null});analytics.ga.recordEvent("Sharing","Clicked Edit Buttons Done Button")},getButtonsTrayToggleButtonLabel:function getButtonsTrayToggleButtonLabel(visibility,enabledButtonsExist){if("visible"===visibility){if(enabledButtonsExist){return this.translate("Edit sharing buttons",{context:"Sharing: Buttons edit label"})}else{return this.translate("Add sharing buttons",{context:"Sharing: Buttons edit label"})}}else{if(enabledButtonsExist){return this.translate("Edit “More” buttons",{context:"Sharing: Buttons edit label"})}else{return this.translate("Add “More” button",{context:"Sharing: Buttons edit label"})}}},getButtonsTrayToggleButtonElement:function getButtonsTrayToggleButtonElement(visibility){var enabledButtonsExist=some(this.props.buttons,{visibility:visibility,enabled:true});return React.createElement(ButtonsPreviewAction,{active:null===this.state.buttonsTrayVisibility,onClick:this.showButtonsTray.bind(null,visibility),icon:enabledButtonsExist?"edit":"plus",position:"bottom-left"},this.getButtonsTrayToggleButtonLabel(visibility,enabledButtonsExist))},getReblogButtonElement:function getReblogButtonElement(){if(this.props.showReblog){return React.createElement("a",{className:"sharing-buttons-preview-button is-enabled style-icon-text sharing-buttons-preview__reblog"},React.createElement("span",{className:"noticon noticon-reblog"}),this.translate("Reblog"))}},getLikeButtonElement:function getLikeButtonElement(){if(this.props.showLike){return React.createElement("span",null,React.createElement("a",{className:"sharing-buttons-preview-button is-enabled style-icon-text sharing-buttons-preview__like"},React.createElement("span",{className:"noticon noticon-like"}),this.translate("Like")),React.createElement("div",{className:"sharing-buttons-preview__fake-user"},React.createElement("img",{src:"https://1.gravatar.com/avatar/767fc9c115a1b989744c755db47feb60"})),React.createElement("div",{className:"sharing-buttons-preview__fake-like"},this.translate("One blogger likes this.")))}},getPreviewButtonsElement:function getPreviewButtonsElement(){var enabledButtons=filter(this.props.buttons,{enabled:true});if(enabledButtons.length){return React.createElement(ButtonsPreviewButtons,{buttons:enabledButtons,visibility:"visible",style:this.props.style,showMore:"hidden"===this.state.buttonsTrayVisibility||some(this.props.buttons,{visibility:"hidden"}),forceMorePreviewVisible:"hidden"===this.state.buttonsTrayVisibility})}},render:function render(){return React.createElement("div",{className:"sharing-buttons-preview"},React.createElement(ButtonsPreviewAction,{active:!this.state.isEditingLabel,onClick:this.toggleEditLabel,icon:"edit",position:"top-left"},this.translate("Edit label text",{context:"Sharing: Buttons edit label"})),React.createElement(ButtonsLabelEditor,{active:this.state.isEditingLabel,value:this.props.label,onChange:this.props.onLabelChange,onClose:this.toggleEditLabel,hasEnabledButtons:some(this.props.buttons,{enabled:true})}),React.createElement("h2",{className:"sharing-buttons-preview__heading"},this.translate("Preview")),React.createElement("div",{className:"sharing-buttons-preview__display"},React.createElement("span",{className:"sharing-buttons-preview__label"},decodeEntities(this.props.label)),React.createElement("div",{className:"sharing-buttons-preview__buttons"},this.getPreviewButtonsElement()),React.createElement("div",{className:"sharing-buttons-preview__reblog-like"},this.getReblogButtonElement(),this.getLikeButtonElement())),React.createElement("div",{className:"sharing-buttons-preview__button-tray-actions"},this.getButtonsTrayToggleButtonElement("visible"),this.getButtonsTrayToggleButtonElement("hidden")),React.createElement(ButtonsTray,{buttons:this.props.buttons,style:"official"===this.props.style?"text":this.props.style,visibility:this.state.buttonsTrayVisibility,onButtonsChange:this.props.onButtonsChange,onClose:this.hideButtonsTray,active:null!==this.state.buttonsTrayVisibility,limited:this.props.site.is_private}))}})},2669:function(module,exports,__webpack_require__){"use strict";var React=__webpack_require__(1);var analytics=__webpack_require__(16);module.exports=React.createClass({displayName:"SharingButtonsStyle",propTypes:{onChange:React.PropTypes.func,value:React.PropTypes.string,disabled:React.PropTypes.bool},getDefaultProps:function getDefaultProps(){return{onChange:function onChange(){},disabled:false}},onChange:function onChange(value){this.props.onChange(value);analytics.ga.recordEvent("Sharing","Clicked Button Style Radio Button",value)},getOptions:function getOptions(){return[{value:"icon-text",label:this.translate("Icon & Text",{context:"Sharing: Sharing button option label"})},{value:"icon",label:this.translate("Icon Only",{context:"Sharing: Sharing button option label"})},{value:"text",label:this.translate("Text Only",{context:"Sharing: Sharing button option label"})},{value:"official",label:this.translate("Official Buttons",{context:"Sharing: Sharing button option label"})}].map(function(option){return React.createElement("label",{key:option.value},React.createElement("input",{name:"sharing_button_style",type:"radio",checked:option.value===this.props.value,onChange:this.onChange.bind(null,option.value),disabled:this.props.disabled}),option.label)},this)},render:function render(){return React.createElement("fieldset",{className:"sharing-buttons__fieldset"},React.createElement("legend",{className:"sharing-buttons__fieldset-heading"},this.translate("Button style",{context:"Sharing: Sharing button option heading"})),this.getOptions())}})},2670:function(module,exports,__webpack_require__){"use strict";var _keys=__webpack_require__(44);var _keys2=_interopRequireDefault(_keys);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}var React=__webpack_require__(1),filter=__webpack_require__(69),assign=__webpack_require__(29),find=__webpack_require__(33),classNames=__webpack_require__(11);var SortableList=__webpack_require__(1869),ButtonsPreviewButtons=__webpack_require__(2172),ButtonsPreviewButton=__webpack_require__(2171);module.exports=React.createClass({displayName:"SharingButtonsTray",propTypes:{buttons:React.PropTypes.array,style:React.PropTypes.oneOf(["icon-text","icon","text","official"]),visibility:React.PropTypes.oneOf(["visible","hidden"]),onButtonsChange:React.PropTypes.func,onButtonChange:React.PropTypes.func,onClose:React.PropTypes.func,active:React.PropTypes.bool,limited:React.PropTypes.bool},getInitialState:function getInitialState(){return{isReordering:false}},componentWillUpdate:function componentWillUpdate(nextProps){if(this.props.visibility!==nextProps.visibility){this.setState({isReordering:false})}},getDefaultProps:function getDefaultProps(){return{buttons:[],style:"icon",visibility:"visible",onButtonsChange:function onButtonsChange(){},onButtonChange:function onButtonChange(){},onClose:function onClose(){},active:false,limited:false}},getHeadingText:function getHeadingText(){if("visible"===this.props.visibility){return this.translate("Edit visible buttons",{context:"Sharing: Buttons editor heading"})}else{return this.translate("Edit “More” buttons",{context:"Sharing: Buttons editor heading"})}},getInstructionText:function getInstructionText(){var labels={touch:this.translate("Tap the buttons you would like to add or remove.",{textOnly:true,context:"Sharing: Buttons editor instructions"}),notouch:this.translate("Click the buttons you would like to add or remove.",{textOnly:true,context:"Sharing: Buttons editor instructions"}),"touch-reorder":this.translate("Tap the button you would like to move. Then tap the desired arrow.",{textOnly:true,context:"Sharing: Buttons editor instructions"}),"notouch-reorder":this.translate("Drag and drop to reorder the buttons.",{textOnly:true,context:"Sharing: Buttons editor instructions"})};return(0,_keys2.default)(labels).map(function(context){var label=labels[context];if("hidden"===this.props.visibility){label+=" "+this.translate("These will be shown in a dropdown under the “More” button.",{textOnly:true,context:"Sharing: Buttons editor instructions"})}return React.createElement("span",{key:context,className:"sharing-buttons-preview__panel-instruction-text is-"+context+"-context"},label)},this)},getButtonsOfCurrentVisibility:function getButtonsOfCurrentVisibility(){return filter(this.props.buttons,{visibility:this.props.visibility})},onButtonsReordered:function onButtonsReordered(order){var buttons=[];this.getButtonsOfCurrentVisibility().forEach(function(button,i){buttons[order[i]]=button},this);buttons=buttons.concat(this.props.buttons.filter(function(button){return button.visibility!==this.props.visibility},this));this.props.onButtonsChange(buttons)},onButtonClick:function onButtonClick(button){var buttons=this.props.buttons.slice(0),currentButton=find(buttons,{ID:button.ID}),isEnabled;if(button.visibility===this.props.visibility){isEnabled=!button.enabled}else{isEnabled=true}assign(currentButton,{enabled:isEnabled,visibility:this.props.visibility});if(!isEnabled){delete button.visibility}this.props.onButtonsChange(buttons)},toggleReorder:function toggleReorder(){this.setState({isReordering:!this.state.isReordering})},getLimitedButtonsNoticeElement:function getLimitedButtonsNoticeElement(){if(this.props.limited){return React.createElement("em",{className:"sharing-buttons-preview__panel-notice"},this.translate("Sharing options are limited on private sites.",{context:"Sharing: Buttons"}))}},getButtonElements:function getButtonElements(){if(this.state.isReordering){var buttons=this.getButtonsOfCurrentVisibility().map(function(button){return React.createElement(ButtonsPreviewButton,{key:button.ID,button:button,enabled:true,style:this.props.style})},this);return React.createElement(SortableList,{onChange:this.onButtonsReordered},buttons)}else{return React.createElement(ButtonsPreviewButtons,{buttons:this.props.buttons,visibility:this.props.visibility,style:this.props.style,showMore:false,onButtonClick:this.onButtonClick})}},render:function render(){var classes=classNames("sharing-buttons-preview__panel","is-bottom","sharing-buttons-tray","buttons-"+this.props.visibility,{"is-active":this.props.active,"is-reordering":this.state.isReordering});return React.createElement("div",{className:classes},React.createElement("div",{className:"sharing-buttons-preview__panel-content"},React.createElement("h3",{className:"sharing-buttons-preview__panel-heading"},this.getHeadingText()),React.createElement("p",{className:"sharing-buttons-preview__panel-instructions"},this.getInstructionText()),React.createElement("div",{className:"sharing-buttons-tray__buttons"},this.getButtonElements()),this.getLimitedButtonsNoticeElement()),React.createElement("footer",{className:"sharing-buttons-preview__panel-actions"},React.createElement("button",{type:"button",className:"button sharing-buttons-preview__panel-action is-left",onClick:this.toggleReorder,disabled:this.getButtonsOfCurrentVisibility().length<=1},this.state.isReordering?this.translate("Add / Remove"):this.translate("Reorder")),React.createElement("button",{type:"button",className:"button sharing-buttons-preview__panel-action",onClick:this.props.onClose},this.translate("Close"))))}})},2671:function(module,exports,__webpack_require__){"use strict";var React=__webpack_require__(1),classNames=__webpack_require__(11);module.exports=React.createClass({displayName:"AccountDialogAccount",propTypes:{account:React.PropTypes.shape({ID:React.PropTypes.oneOfType([React.PropTypes.number,React.PropTypes.string]),name:React.PropTypes.string,picture:React.PropTypes.string,keyringConnectionId:React.PropTypes.number,isConnected:React.PropTypes.bool,isExternal:React.PropTypes.bool}).isRequired,selected:React.PropTypes.bool,conflicting:React.PropTypes.bool,onChange:React.PropTypes.func},getDefaultProps:function getDefaultProps(){return{connected:false,selected:false,conflicting:false,onChange:function onChange(){}}},getPictureElement:function getPictureElement(){if(this.props.account.picture){return React.createElement("img",{src:this.props.account.picture,alt:this.props.account.name,className:"account-dialog-account__picture"})}},getRadioElement:function getRadioElement(){if(!this.props.account.isConnected){return React.createElement("input",{type:"radio",onChange:this.props.onChange,checked:this.props.selected,className:"account-dialog-account__input"})}},render:function render(){var classes=classNames("account-dialog-account",{"is-connected":this.props.account.isConnected,"is-conflict":this.props.conflicting});return React.createElement("li",{className:classes},React.createElement("label",{className:"account-dialog-account__label"},this.getRadioElement(),this.getPictureElement(),React.createElement("span",{className:"account-dialog-account__name"},this.props.account.name)))}})},2672:function(module,exports,__webpack_require__){
"use strict";var _freeze=__webpack_require__(247);var _freeze2=_interopRequireDefault(_freeze);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}var React=__webpack_require__(1),find=__webpack_require__(33),isEqual=__webpack_require__(92),classNames=__webpack_require__(11);var Dialog=__webpack_require__(148),AccountDialogAccount=__webpack_require__(2671),Notice=__webpack_require__(79);module.exports=React.createClass({displayName:"AccountDialog",propTypes:{accounts:React.PropTypes.arrayOf(React.PropTypes.object),onAccountSelected:React.PropTypes.func,service:React.PropTypes.object,isVisible:React.PropTypes.bool},getInitialState:function getInitialState(){return{selectedAccount:null}},getDefaultProps:function getDefaultProps(){return{accounts:(0,_freeze2.default)([]),onAccountSelected:function onAccountSelected(){},service:(0,_freeze2.default)({}),isVisible:true}},componentWillReceiveProps:function componentWillReceiveProps(nextProps){if(!nextProps.visible){this.setState({selectedAccount:null})}},getSelectedAccount:function getSelectedAccount(){if(this.state.selectedAccount){return this.state.selectedAccount}return find(this.props.accounts,{isConnected:false})},getAccountsByConnectedStatus:function getAccountsByConnectedStatus(isConnected){return this.props.accounts.filter(function(account){return isConnected===account.isConnected})},getAccountToConnect:function getAccountToConnect(){var selectedAccount=this.getSelectedAccount();if(selectedAccount&&!selectedAccount.isConnected){return selectedAccount}},areAccountsConflicting:function areAccountsConflicting(account,otherAccount){return account.keyringConnectionId===otherAccount.keyringConnectionId&&account.ID!==otherAccount.ID},isSelectedAccountConflicting:function isSelectedAccountConflicting(){var selectedAccount=this.getSelectedAccount();return selectedAccount&&this.props.accounts.some(function(maybeConnectedAccount){return maybeConnectedAccount.isConnected&&this.areAccountsConflicting(maybeConnectedAccount,selectedAccount)},this)},onSelectedAccountChanged:function onSelectedAccountChanged(account){this.setState({selectedAccount:account})},getAccountElements:function getAccountElements(accounts){var selectedAccount=this.getSelectedAccount();return accounts.map(function(account){return React.createElement(AccountDialogAccount,{key:[account.keyringConnectionId,account.ID].join(),account:account,selected:isEqual(selectedAccount,account),conflicting:account.isConnected&&selectedAccount&&this.areAccountsConflicting(account,selectedAccount),onChange:this.onSelectedAccountChanged.bind(null,account)})},this)},getDisconnectWarning:function getDisconnectWarning(){if(this.isSelectedAccountConflicting()){return React.createElement(Notice,{type:"message",status:"is-warning",text:this.translate("The connection marked {{icon/}} will be replaced with your selection.",{components:{icon:React.createElement("span",{className:"noticon noticon-warning"})},context:"Sharing: Publicize confirmation"}),isCompact:true,showDismiss:false})}},getConnectedAccountsContent:function getConnectedAccountsContent(){var connectedAccounts=this.getAccountsByConnectedStatus(true);if(connectedAccounts.length){return React.createElement("div",{className:"account-dialog__connected-accounts"},React.createElement("h3",{className:"account-dialog__connected-accounts-heading"},this.translate("Connected")),React.createElement("ul",{className:"account-dialog__accounts"},this.getAccountElements(connectedAccounts)))}},getDisclaimerText:function getDisclaimerText(){if(1===this.props.accounts.length){return this.translate("Confirm this is the account you would like to authorize. Note that your posts will be automatically shared to this account.",{context:"Sharing: Publicize connection confirmation"})}else{return this.translate("Select the account you wish to authorize. Note that your posts will be shared to the selected account automatically.",{context:"Sharing: Publicize connection confirmation"})}},onClose:function onClose(action){var accountToConnect=this.getAccountToConnect();if("connect"===action&&accountToConnect){this.props.onAccountSelected(this.props.service,accountToConnect.keyringConnectionId,accountToConnect.ID)}else{this.props.onAccountSelected()}},render:function render(){var classes=classNames("account-dialog",{"single-account":1===this.props.accounts.length}),buttons;buttons=[{action:"cancel",label:this.translate("Cancel")},{action:"connect",label:this.translate("Connect"),isPrimary:true}];return React.createElement(Dialog,{isVisible:this.props.isVisible,buttons:buttons,additionalClassNames:classes,onClose:this.onClose},React.createElement("h2",{className:"account-dialog__authorizing-service"},this.translate("Connecting %(service)s",{args:{service:this.props.service?this.props.service.label:""},context:"Sharing: Publicize connection confirmation"})),React.createElement("p",{className:"account-dialog__authorizing-disclaimer"},this.getDisclaimerText()),React.createElement("ul",{className:"account-dialog__accounts"},this.getAccountElements(this.getAccountsByConnectedStatus(false))),this.getConnectedAccountsContent(),this.getDisconnectWarning())}})},2673:function(module,exports,__webpack_require__){"use strict";var React=__webpack_require__(1),classNames=__webpack_require__(11);var analytics=__webpack_require__(16),serviceConnections=__webpack_require__(1592);module.exports=React.createClass({displayName:"SharingConnection",propTypes:{site:React.PropTypes.object,user:React.PropTypes.object,connection:React.PropTypes.object.isRequired,service:React.PropTypes.object.isRequired,onDisconnect:React.PropTypes.func,isDisconnecting:React.PropTypes.bool,showDisconnect:React.PropTypes.bool,onRefresh:React.PropTypes.func,isRefreshing:React.PropTypes.bool,onToggleSitewideConnection:React.PropTypes.func},getInitialState:function getInitialState(){return{isSavingSitewide:false}},componentDidUpdate:function componentDidUpdate(prevProps){if(this.state.isSavingSitewide&&this.props.connection.shared!==prevProps.connection.shared){this.setState({isSavingSitewide:false})}},getDefaultProps:function getDefaultProps(){return{onDisconnect:function onDisconnect(){},isDisconnecting:false,showDisconnect:false,onRefresh:function onRefresh(){},isRefreshing:false,onToggleSitewideConnection:function onToggleSitewideConnection(){}}},disconnect:function disconnect(){if(!this.props.isDisconnecting){this.props.onDisconnect(this.props.connection)}},refresh:function refresh(){if(!this.props.isRefreshing){this.props.onRefresh(this.props.connection)}},getProfileImage:function getProfileImage(){if(this.props.connection.external_profile_picture){return React.createElement("img",{src:this.props.connection.external_profile_picture,alt:this.props.connection.label,className:"sharing-connection__account-avatar"})}else{return React.createElement("span",{className:"sharing-connection__account-avatar is-fallback "+this.props.connection.service},React.createElement("span",{className:"screen-reader-text"},this.props.connection.label))}},getReconnectButton:function getReconnectButton(){var currentUser=this.props.user.get();if(currentUser&&"broken"===this.props.connection.status&&currentUser.ID===this.props.connection.keyring_connection_user_ID){return React.createElement("a",{onClick:this.refresh,className:"sharing-connection__account-action reconnect"},this.translate("Reconnect"))}},getDisconnectButton:function getDisconnectButton(){if(this.props.showDisconnect&&serviceConnections.canCurrentUserPerformActionOnConnection("delete",this.props.connection)){return React.createElement("a",{onClick:this.disconnect,className:"sharing-connection__account-action disconnect"},this.translate("Disconnect"))}},toggleSitewideConnection:function toggleSitewideConnection(event){if(!this.state.isSavingSitewide){var isNowSitewide=event.target.checked;this.setState({isSavingSitewide:true});this.props.onToggleSitewideConnection(this.props.connection,isNowSitewide);analytics.ga.recordEvent("Sharing","Clicked Connection Available to All Users Checkbox",this.props.service.name,isNowSitewide?1:0)}},isConnectionShared:function isConnectionShared(){return this.state.isSavingSitewide?!this.props.connection.shared:this.props.connection.shared},getConnectionKeyringUserLabel:function getConnectionKeyringUserLabel(){var currentUser=this.props.user.get(),keyringUser=this.props.site.getUser(this.props.connection.keyring_connection_user_ID);if(currentUser&&keyringUser&&currentUser.ID!==keyringUser.ID){return React.createElement("aside",{className:"sharing-connection__keyring-user"},this.translate("Connected by %(username)s",{args:{username:keyringUser.nice_name},context:"Sharing: connections"}))}},getConnectionSitewideElement:function getConnectionSitewideElement(){var userCanUpdate=serviceConnections.canCurrentUserPerformActionOnConnection("update",this.props.connection),content=[];if(!serviceConnections.isServiceForPublicize(this.props.service.name)){return}if(userCanUpdate){content.push(React.createElement("input",{key:"checkbox",type:"checkbox",checked:this.isConnectionShared(),onChange:this.toggleSitewideConnection,readOnly:this.state.isSavingSitewide}))}if(userCanUpdate||this.props.connection.shared){content.push(React.createElement("span",{key:"label"},this.translate("Connection available to all administrators, editors, and authors",{context:"Sharing: Publicize"})))}if(content.length){return React.createElement("label",{className:"sharing-connection__account-sitewide-connection"},content)}},render:function render(){var connectionSitewideElement=this.getConnectionSitewideElement(),connectionClasses,statusClasses;connectionClasses=classNames("sharing-connection",{disabled:this.props.isDisconnecting||this.props.isRefreshing});statusClasses=classNames("sharing-connection__account-status",{"is-shareable":undefined!==connectionSitewideElement});return React.createElement("li",{className:connectionClasses},this.getProfileImage(),React.createElement("div",{className:statusClasses},React.createElement("span",{className:"sharing-connection__account-name"},this.props.connection.external_display),this.getConnectionKeyringUserLabel(),connectionSitewideElement),React.createElement("div",{className:"sharing-connection__account-actions"},this.getReconnectButton(),this.getDisconnectButton()))}})},2674:function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:true});var _extends2=__webpack_require__(19);var _extends3=_interopRequireDefault(_extends2);var _react=__webpack_require__(1);var _react2=_interopRequireDefault(_react);var _filter=__webpack_require__(69);var _filter2=_interopRequireDefault(_filter);var _dataObserve=__webpack_require__(146);var _dataObserve2=_interopRequireDefault(_dataObserve);var _analytics=__webpack_require__(16);var _analytics2=_interopRequireDefault(_analytics);var _servicesGroup=__webpack_require__(2683);var _servicesGroup2=_interopRequireDefault(_servicesGroup);var _accountDialog=__webpack_require__(2672);var _accountDialog2=_interopRequireDefault(_accountDialog);var _serviceConnections=__webpack_require__(1592);var _serviceConnections2=_interopRequireDefault(_serviceConnections);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}exports.default=_react2.default.createClass({displayName:"SharingConnections",mixins:[(0,_dataObserve2.default)("sites","services","connections","user")],getInitialState:function getInitialState(){return{selectingAccountForService:null}},getConnections:function getConnections(){if(this.props.sites.selected){return this.props.connections.get(this.props.sites.getSelectedSite().ID)}else{return this.props.connections.get()}},addConnection:function addConnection(service,keyringConnectionId,externalUserId){var siteId;if(this.props.sites.selected){siteId=this.props.sites.getSelectedSite().ID}if(service){this.props.connections.create(service,siteId,keyringConnectionId,externalUserId);if(!keyringConnectionId){this.props.connections.once("connect",function(){if(_serviceConnections2.default.didKeyringConnectionSucceed(service.name,siteId)&&_serviceConnections2.default.isServiceForPublicize(service.name)){this.setState({selectingAccountForService:service})}}.bind(this))}else{_analytics2.default.ga.recordEvent("Sharing","Clicked Connect Button in Modal",this.state.selectingAccountForService.name)}}else{this.props.connections.emit("create:error",{cancel:true});_analytics2.default.ga.recordEvent("Sharing","Clicked Cancel Button in Modal",this.state.selectingAccountForService.name)}this.setState({selectingAccountForService:null})},refreshConnection:function refreshConnection(connection){this.props.connections.refresh(connection)},removeConnection:function removeConnection(connections){connections=_serviceConnections2.default.filterConnectionsToRemove(connections);this.props.connections.destroy(connections)},toggleSitewideConnection:function toggleSitewideConnection(connection,isSitewide){this.props.connections.update(connection,{shared:isSitewide})},getAccountDialog:function getAccountDialog(){var isSelectingAccount=!!this.state.selectingAccountForService,accounts,siteId;if(isSelectingAccount){if(this.props.sites.selected){siteId=this.props.sites.getSelectedSite().ID}accounts=_serviceConnections2.default.getAvailableExternalAccounts(this.state.selectingAccountForService.name,siteId)}return _react2.default.createElement(_accountDialog2.default,{isVisible:isSelectingAccount,service:this.state.selectingAccountForService,accounts:accounts,onAccountSelected:this.addConnection})},renderServiceGroups:function renderServiceGroups(){var commonGroupProps={user:this.props.user,connections:this.props.connections,onAddConnection:this.addConnection,onRemoveConnection:this.removeConnection,onRefreshConnection:this.refreshConnection,onToggleSitewideConnection:this.toggleSitewideConnection,initialized:this.props.services.initialized&&!!this.props.sites.selected},services=this.props.services.get();if(this.props.sites.selected){commonGroupProps.site=this.props.sites.getSelectedSite()}return _react2.default.createElement("div",null,_react2.default.createElement(_servicesGroup2.default,(0,_extends3.default)({services:(0,_filter2.default)(services,{type:"publicize"}),title:this.translate("Publicize Your Posts")},commonGroupProps)),_react2.default.createElement(_servicesGroup2.default,(0,_extends3.default)({services:(0,_filter2.default)(services,{type:"other"}),title:this.translate("Other Connections"),description:this.translate("Connect any of these additional services to further enhance your site.")},commonGroupProps)))},render:function render(){return _react2.default.createElement("div",{id:"sharing-connections",className:"sharing-settings sharing-connections"},this.getAccountDialog(),this.renderServiceGroups())}});module.exports=exports["default"]},2675:function(module,exports,__webpack_require__){"use strict";var _freeze=__webpack_require__(247);var _freeze2=_interopRequireDefault(_freeze);var _react=__webpack_require__(1);var _react2=_interopRequireDefault(_react);var _serviceConnections=__webpack_require__(1592);var _serviceConnections2=_interopRequireDefault(_serviceConnections);var _button=__webpack_require__(68);var _button2=_interopRequireDefault(_button);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}module.exports=_react2.default.createClass({displayName:"SharingServiceAction",propTypes:{status:_react2.default.PropTypes.string,service:_react2.default.PropTypes.object.isRequired,onAction:_react2.default.PropTypes.func,connections:_react2.default.PropTypes.array,isDisconnecting:_react2.default.PropTypes.bool,isRefreshing:_react2.default.PropTypes.bool,isConnecting:_react2.default.PropTypes.bool},getDefaultProps:function getDefaultProps(){return{status:"unknown",onAction:function onAction(){},connections:(0,_freeze2.default)([]),isDisconnecting:false,isRefreshing:false,isConnecting:false}},onActionClick:function onActionClick(event){event.stopPropagation();this.props.onAction()},render:function render(){var primary=false,borderless=false,warning=false,isPending=void 0,removableConnections=void 0,label=void 0;isPending="unknown"===this.props.status||this.props.isDisconnecting||this.props.isRefreshing||this.props.isConnecting;if("connected"===this.props.status){removableConnections=_serviceConnections2.default.getRemovableConnections(this.props.service.name)}if("unknown"===this.props.status){label=this.translate("Loading…",{context:"Sharing: Publicize status pending button label"})}else if(this.props.isDisconnecting){label=this.translate("Disconnecting…",{context:"Sharing: Publicize disconnect pending button label"})}else if(this.props.isRefreshing){label=this.translate("Reconnecting…",{context:"Sharing: Publicize reconnect pending button label"});warning=true}else if(this.props.isConnecting){label=this.translate("Connecting…",{context:"Sharing: Publicize connect pending button label"})}else if("connected"===this.props.status&&removableConnections.length){if(removableConnections.length>1){label=this.translate("Disconnect All",{context:"Sharing: Publicize disconnect button label"})}else{label=this.translate("Disconnect",{context:"Sharing: Publicize disconnect button label"})}}else if("reconnect"===this.props.status){label=this.translate("Reconnect",{context:"Sharing: Publicize reconnect pending button label"});warning=true}else{label=this.translate("Connect",{context:"Sharing: Publicize connect pending button label"});primary=true}return _react2.default.createElement(_button2.default,{primary:primary,borderless:borderless,scary:warning,compact:true,onClick:this.onActionClick,disabled:isPending},label)}})},2676:function(module,exports,__webpack_require__){"use strict";var _freeze=__webpack_require__(247);var _freeze2=_interopRequireDefault(_freeze);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}var React=__webpack_require__(1);var Connection=__webpack_require__(2673),serviceConnections=__webpack_require__(1592),analytics=__webpack_require__(16);module.exports=React.createClass({displayName:"SharingServiceConnectedAccounts",propTypes:{site:React.PropTypes.object,user:React.PropTypes.object,service:React.PropTypes.object.isRequired,connections:React.PropTypes.array,onAddConnection:React.PropTypes.func,onRemoveConnection:React.PropTypes.func,isDisconnecting:React.PropTypes.bool,onRefreshConnection:React.PropTypes.func,isRefreshing:React.PropTypes.bool,onToggleSitewideConnection:React.PropTypes.func},getDefaultProps:function getDefaultProps(){return{connections:(0,_freeze2.default)([]),onAddConnection:function onAddConnection(){},onRemoveConnection:function onRemoveConnection(){},isDisconnecting:false,onRefreshConnection:function onRefreshConnection(){},isRefreshing:false,onToggleSitewideConnection:function onToggleSitewideConnection(){}}},getConnectionElements:function getConnectionElements(){return this.props.connections.map(function(connection){return React.createElement(Connection,{key:connection.keyring_connection_ID,site:this.props.site,user:this.props.user,connection:connection,service:this.props.service,onDisconnect:this.props.onRemoveConnection,isDisconnecting:this.props.isDisconnecting,showDisconnect:this.props.connections.length>1||"broken"===connection.status,onRefresh:this.props.onRefreshConnection,isRefreshing:this.props.isRefreshing,onToggleSitewideConnection:this.props.onToggleSitewideConnection})},this)},getConnectAnotherElement:function getConnectAnotherElement(){if(serviceConnections.supportsMultipleConnectionsPerSite(this.props.service.name)){return React.createElement("a",{onClick:this.connectAnother,className:"button new-account"},this.translate("Connect a different account",{comment:"Sharing: Publicize connections"}))}},connectAnother:function connectAnother(){this.props.onAddConnection();analytics.ga.recordEvent("Sharing","Clicked Connect Another Account Button",this.props.service.name)},render:function render(){return React.createElement("div",{className:"sharing-service-accounts-detail"},React.createElement("ul",{className:"sharing-service-connected-accounts"},this.getConnectionElements()),this.getConnectAnotherElement())}})},2677:function(module,exports,__webpack_require__){"use strict";var _freeze=__webpack_require__(247);var _freeze2=_interopRequireDefault(_freeze);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}var React=__webpack_require__(1);module.exports=React.createClass({displayName:"SharingServiceDescription",propTypes:{descriptions:React.PropTypes.object,numberOfConnections:React.PropTypes.number},getDefaultProps:function getDefaultProps(){return{descriptions:(0,_freeze2.default)({facebook:function facebook(){if(this.props.numberOfConnections>0){return this.translate("Sharing posts to your news feed.","Sharing posts to your news feeds.",{count:this.props.numberOfConnections,comment:"Description for Facebook Publicize when one or more accounts are connected"})}else{return this.translate("Share posts to your news feed.",{comment:"Description for Facebook Publicize when no accounts are connected"})}},twitter:function twitter(){if(this.props.numberOfConnections>0){return this.translate("Sharing posts to your Twitter feed.","Sharing posts to your Twitter feeds.",{count:this.props.numberOfConnections,comment:"Description for Twitter Publicize when one or more accounts are connected"})}else{return this.translate("Share posts to your Twitter feed.",{comment:"Description for Twitter Publicize when no accounts are connected"})}},google_plus:function google_plus(){if(this.props.numberOfConnections>0){return this.translate("Commenting and sharing to your profile.","Commenting and sharing to your profiles.",{count:this.props.numberOfConnections,comment:"Description for Google+ Publicize when one or more accounts are connected"})}else{return this.translate("Comment and share to your profile.",{comment:"Description for Google+ Publicize when no accounts are connected"})}},linkedin:function linkedin(){if(this.props.numberOfConnections>0){return this.translate("Sharing posts to your connections.",{comment:"Description for LinkedIn Publicize when one or more accounts are connected"})}else{return this.translate("Share posts to your connections.",{comment:"Description for LinkedIn Publicize when no accounts are connected"})}},tumblr:function tumblr(){if(this.props.numberOfConnections>0){return this.translate("Sharing posts to your Tumblr blog.","Sharing posts to your Tumblr blogs.",{count:this.props.numberOfConnections,comment:"Description for Tumblr Publicize when one or more accounts are connected"})}else{return this.translate("Share posts to your Tumblr blog.",{comment:"Description for Tumblr Publicize when no accounts are connected"})}},path:function path(){if(this.props.numberOfConnections>0){return this.translate("Sharing posts to your Path timeline.","Sharing posts to your Path timelines.",{count:this.props.numberOfConnections,comment:"Description for Path Publicize when one or more accounts are connected"})}else{return this.translate("Share posts to your Path timeline.",{comment:"Description for Path Publicize when no accounts are connected"})}},eventbrite:function eventbrite(){if(this.props.numberOfConnections>0){return this.translate("Connected to your Eventbrite account.",{comment:"Description for Eventbrite when one or more accounts are connected"})}else{return this.translate("Connect to your Eventbrite account.",{comment:"Description for Eventbrite when no accounts are connected"})}}}),numberOfConnections:0}},render:function render(){var description;if("reconnect"===this.props.status){description=this.translate("There is an issue connecting to %(service)s.",{args:{service:this.props.service.label},context:"Sharing: Publicize"})}else if("function"===typeof this.props.descriptions[this.props.service.name]){description=this.props.descriptions[this.props.service.name].call(this)}return React.createElement("p",{className:"sharing-service__description"},description)}})},2678:function(module,exports,__webpack_require__){"use strict";var React=__webpack_require__(1),classNames=__webpack_require__(11);module.exports=React.createClass({displayName:"SharingServiceExample",propTypes:{image:React.PropTypes.shape({src:React.PropTypes.string,alt:React.PropTypes.string}),label:React.PropTypes.node,single:React.PropTypes.bool},getDefaultProps:function getDefaultProps(){return{single:false}},render:function render(){var classes=classNames("sharing-service-example",{"is-single":this.props.single});return React.createElement("div",{className:classes},React.createElement("div",{className:"sharing-service-example-screenshot"},React.createElement("img",{src:this.props.image.src,alt:this.props.image.alt})),React.createElement("div",{className:"sharing-service-example-screenshot-label"},this.props.label))}})},2679:function(module,exports,__webpack_require__){"use strict";var _freeze=__webpack_require__(247);var _freeze2=_interopRequireDefault(_freeze);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}var React=__webpack_require__(1);var ServiceExample=__webpack_require__(2678);module.exports=React.createClass({displayName:"SharingServiceExamples",propTypes:{examples:React.PropTypes.object,site:React.PropTypes.object},getDefaultProps:function getDefaultProps(){return{examples:(0,_freeze2.default)({facebook:function facebook(){return[{image:{src:"/calypso/images/sharing/facebook-profile.png",alt:this.translate("Share posts to your Facebook page or profile",{textOnly:true})},label:this.translate("{{strong}}Connect{{/strong}} to automatically share posts on your Facebook page or profile.",{components:{strong:React.createElement("strong",null)}})},{image:{src:"/calypso/images/sharing/facebook-sharing.png",alt:this.translate("Add a sharing button",{textOnly:true})},label:this.translate("Add a {{link}}sharing button{{/link}} to your posts so readers can share your story with their friends.",{components:{link:React.createElement("a",{href:this.props.site?"/sharing/buttons/"+this.props.site.slug:"https://support.wordpress.com/sharing/"})}})}]},instagram:function instagram(){return[{image:{src:"/calypso/images/sharing/instagram-widget.png",alt:this.translate("Add an Instagram widget",{textOnly:true})},label:this.translate("Add an {{link}}Instagram widget{{/link}} to display your latest photos.",{components:{link:React.createElement("a",{href:"https://support.wordpress.com/instagram/instagram-widget/"})}})},{image:{src:"/calypso/images/sharing/instagram-media.png",alt:this.translate("Access Instagram photos via the Media Library",{textOnly:true})},label:this.translate("Get instant access to all your Instagram photos through the {{link}}Media Library{{/link}}.",{components:{link:React.createElement("a",{href:"https://support.wordpress.com/media/"})}})}]},twitter:function twitter(){return[{image:{src:"/calypso/images/sharing/twitter-publicize.png",alt:this.translate("Share posts to your Twitter followers",{textOnly:true})},label:this.translate("{{strong}}Connect{{/strong}} to automatically share posts with your Twitter followers.",{components:{strong:React.createElement("strong",null)}})},{image:{src:"/calypso/images/sharing/twitter-timeline.png",alt:this.translate("Add a Twitter Timeline Widget",{textOnly:true})},label:this.translate("Add a {{link}}Twitter Timeline Widget{{/link}} to display your latest tweets on your site.",{components:{link:React.createElement("a",{href:"https://support.wordpress.com/widgets/twitter-timeline-widget/"})}})}]},google_plus:function google_plus(){return[{image:{src:"/calypso/images/sharing/google-publicize.png",alt:this.translate("Share posts to your Google+ page",{textOnly:true})},label:this.translate("{{strong}}Connect{{/strong}} to automatically share posts to your Google+ page.",{components:{strong:React.createElement("strong",null)}})},{image:{src:"/calypso/images/sharing/google-sharing.png",alt:this.translate("Add a sharing button",{textOnly:true})},label:this.translate("Add a {{link}}sharing button{{/link}} to your posts so readers can share your story with their circles.",{components:{link:React.createElement("a",{href:this.props.site?"/sharing/buttons/"+this.props.site.slug:"https://support.wordpress.com/sharing/"})}})}]},linkedin:function linkedin(){return[{image:{src:"/calypso/images/sharing/linkedin-publicize.png",alt:this.translate("Share posts with your LinkedIn connections",{textOnly:true})},label:this.translate("{{strong}}Connect{{/strong}} to automatically share posts with your LinkedIn connections.",{components:{strong:React.createElement("strong",null)}})},{image:{src:"/calypso/images/sharing/linkedin-sharing.png",alt:this.translate("Add a sharing button",{textOnly:true})},label:this.translate("Add a {{link}}sharing button{{/link}} to your posts so readers can share your story with their connections.",{components:{link:React.createElement("a",{href:this.props.site?"/sharing/buttons/"+this.props.site.slug:"https://support.wordpress.com/sharing/"})}})}]},tumblr:function tumblr(){return[{image:{src:"/calypso/images/sharing/tumblr-publicize.png",alt:this.translate("Share posts to your Tumblr blog",{textOnly:true})},label:this.translate("{{strong}}Connect{{/strong}} to automatically share posts to your Tumblr blog.",{components:{strong:React.createElement("strong",null)}})},{image:{src:"/calypso/images/sharing/tumblr-sharing.png",alt:this.translate("Add a sharing button",{textOnly:true})},label:this.translate("Add a {{link}}sharing button{{/link}} to your posts so readers can share your story with their followers.",{components:{link:React.createElement("a",{href:this.props.site?"/sharing/buttons/"+this.props.site.slug:"https://support.wordpress.com/sharing/"})}})}]},path:function path(){return[{image:{src:"/calypso/images/sharing/path-publicize.png",alt:this.translate("Share posts to your Path timeline",{textOnly:true})},label:this.translate("{{strong}}Connect{{/strong}} to automatically share posts to your Path timeline.",{components:{strong:React.createElement("strong",null)}})}]},eventbrite:function eventbrite(){return[{image:{src:"/calypso/images/sharing/eventbrite-list.png",alt:this.translate("Connect Eventbrite to list your events",{textOnly:true})},label:this.translate("{{strong}}Connect{{/strong}} Eventbrite to {{link}}list all your events{{/link}} on a page.",{components:{strong:React.createElement("strong",null),link:React.createElement("a",{href:"https://support.wordpress.com/eventbrite"})}})},{image:{src:"/calypso/images/sharing/eventbrite-widget.png",alt:this.translate("Add an Eventbrite widget to your page",{textOnly:true})},label:this.translate("Add an {{link}}Eventbrite widget{{/link}} to display a list of your upcoming events.",{components:{link:React.createElement("a",{href:"https://support.wordpress.com/widgets/eventbrite-event-calendarlisting-widget/"})}})}]},bandpage:function bandpage(){return[{image:{src:"/calypso/images/sharing/bandpage-widget.png",alt:this.translate("Add a BandPage widget",{textOnly:true})},label:this.translate("Add a {{link}}BandPage widget{{/link}} to display your music, photos, videos bio, and event listings.",{components:{link:React.createElement("a",{href:"https://support.wordpress.com/widgets/bandpage-widget/"})}})}]}})}},getExamples:function getExamples(){var examples;if(this.props.examples[this.props.service.name]){examples=this.props.examples[this.props.service.name].call(this);return examples.map(function(example,i){return React.createElement(ServiceExample,{key:i,image:example.image,label:example.label,single:1===examples.length})})}},render:function render(){return React.createElement("div",{className:"sharing-service-examples"},this.getExamples())}})},2680:function(module,exports,__webpack_require__){"use strict";var _button=__webpack_require__(68);var _button2=_interopRequireDefault(_button);var _foldableCard=__webpack_require__(1486);
var _foldableCard2=_interopRequireDefault(_foldableCard);var _gridicon=__webpack_require__(28);var _gridicon2=_interopRequireDefault(_gridicon);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}var React=__webpack_require__(1);module.exports=React.createClass({displayName:"SharingServicePlaceholder",render:function render(){var header=React.createElement("div",null,React.createElement(_gridicon2.default,{icon:"share",size:48,className:"sharing-service__logo"}),React.createElement("div",{className:"sharing-service__name"},React.createElement("h2",null),React.createElement("p",{className:"sharing-service__description"})));var summary=React.createElement(_button2.default,{compact:true,disabled:true},this.translate("Loading"));return React.createElement("li",{className:"sharing-service is-placeholder"},React.createElement(_foldableCard2.default,{header:header,summary:summary,className:"sharing-service",compact:true},React.createElement("div",null)))}})},2681:function(module,exports,__webpack_require__){"use strict";var _freeze=__webpack_require__(247);var _freeze2=_interopRequireDefault(_freeze);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}var React=__webpack_require__(1);module.exports=React.createClass({displayName:"SharingServiceTip",getDefaultProps:function getDefaultProps(){return{tips:(0,_freeze2.default)({facebook:function facebook(){return this.translate("You can also add a {{likeBoxLink}}Like Box{{/likeBoxLink}}, a {{shareButtonLink}}share button{{/shareButtonLink}}, or {{embedLink}}embed{{/embedLink}} your page or profile on your site.",{components:{likeBoxLink:React.createElement("a",{href:"https://support.wordpress.com/facebook-integration/#facebook-like-box"}),shareButtonLink:React.createElement("a",{href:"https://support.wordpress.com/sharing/"}),embedLink:React.createElement("a",{href:"https://support.wordpress.com/facebook-integration/facebook-embeds/"})},context:"Sharing: Tip in settings"})},twitter:function twitter(){return this.translate("You can also add a {{widgetLink}}Twitter Timeline Widget{{/widgetLink}} to display any public timeline on your site.",{components:{widgetLink:React.createElement("a",{href:"https://support.wordpress.com/widgets/twitter-timeline-widget/"})},context:"Sharing: Tip in settings"})},instagram:function instagram(){return this.translate("You can also add an {{widgetLink}}Instagram Widget{{/widgetLink}} to display your latest Instagram photos on your site.",{components:{widgetLink:React.createElement("a",{href:"https://support.wordpress.com/instagram/instagram-widget/"})},context:"Sharing: Tip in settings"})},google_plus:function google_plus(){return this.translate("You can also {{embedLink}}embed a Google+ post{{/embedLink}} onto a post or page.",{components:{embedLink:React.createElement("a",{href:"https://support.wordpress.com/google-plus-embeds/"})},context:"Sharing: Tip in settings"})},eventbrite:function eventbrite(){return this.translate("You can also add the {{embedLink}}Eventbrite widget{{/embedLink}} to display events in a sidebar.",{components:{embedLink:React.createElement("a",{href:"https://support.wordpress.com/widgets/eventbrite-event-calendarlisting-widget/"})},context:"Sharing: Tip in settings"})}})}},render:function render(){if("function"===typeof this.props.tips[this.props.service.name]){return React.createElement("div",{className:"sharing-service-tip"},React.createElement("span",{className:"noticon noticon-info"}),this.props.tips[this.props.service.name].call(this))}else{return React.createElement("div",{className:"sharing-service-tip"})}}})},2682:function(module,exports,__webpack_require__){"use strict";var React=__webpack_require__(1);var ServiceTip=__webpack_require__(2681),ServiceDescription=__webpack_require__(2677),ServiceExamples=__webpack_require__(2679),ServiceAction=__webpack_require__(2675),ServiceConnectedAccounts=__webpack_require__(2676),notices=__webpack_require__(71),sites=__webpack_require__(55)(),serviceConnections=__webpack_require__(1592),analytics=__webpack_require__(16),FoldableCard=__webpack_require__(1486),SocialLogo=__webpack_require__(699);module.exports=React.createClass({displayName:"SharingService",propTypes:{site:React.PropTypes.object,user:React.PropTypes.object,service:React.PropTypes.object.isRequired,connections:React.PropTypes.object.isRequired,onAddConnection:React.PropTypes.func,onRemoveConnection:React.PropTypes.func,onRefreshConnection:React.PropTypes.func,onToggleSitewideConnection:React.PropTypes.func},getInitialState:function getInitialState(){return{isOpen:false,isConnecting:false,isDisconnecting:false,isRefreshing:false}},getDefaultProps:function getDefaultProps(){return{onAddConnection:function onAddConnection(){},onRemoveConnection:function onRemoveConnection(){},onRefreshConnection:function onRefreshConnection(){},onToggleSitewideConnection:function onToggleSitewideConnection(){}}},componentWillUnmount:function componentWillUnmount(){this.props.connections.off("create:success",this.onConnectionSuccess);this.props.connections.off("create:error",this.onConnectionError);this.props.connections.off("destroy:success",this.onDisconnectionSuccess);this.props.connections.off("destroy:error",this.onDisconnectionError);this.props.connections.off("refresh:success",this.onRefreshSuccess);this.props.connections.off("refresh:error",this.onRefreshError)},onConnectionSuccess:function onConnectionSuccess(){this.setState({isConnecting:false});this.props.connections.off("create:error",this.onConnectionError);notices.success(this.translate("The %(service)s account was successfully connected.",{args:{service:this.props.service.label},context:"Sharing: Publicize connection confirmation"}));if(!this.state.isOpen){this.setState({isOpen:true})}},onConnectionError:function onConnectionError(reason){this.setState({isConnecting:false});this.props.connections.off("create:success",this.onConnectionSuccess);if(reason&&reason.cancel){notices.warning(this.translate("The %(service)s connection could not be made because no account was selected.",{args:{service:this.props.service.label},context:"Sharing: Publicize connection confirmation"}))}else if(reason&&reason.connected){notices.warning(this.translate("The %(service)s connection could not be made because all available accounts are already connected.",{args:{service:this.props.service.label},context:"Sharing: Publicize connection confirmation"}))}else{notices.error(this.translate("The %(service)s connection could not be made.",{args:{service:this.props.service.label},context:"Sharing: Publicize connection confirmation"}))}},onDisconnectionSuccess:function onDisconnectionSuccess(){this.setState({isDisconnecting:false});this.props.connections.off("destroy:error",this.onDisconnectionError);notices.success(this.translate("The %(service)s account was successfully disconnected.",{args:{service:this.props.service.label},context:"Sharing: Publicize disconnection confirmation"}))},onDisconnectionError:function onDisconnectionError(){this.setState({isDisconnecting:false});this.props.connections.off("destroy:success",this.onDisconnectionSuccess);notices.error(this.translate("The %(service)s account was unable to be disconnected.",{args:{service:this.props.service.label},context:"Sharing: Publicize disconnection confirmation"}))},onRefreshSuccess:function onRefreshSuccess(){this.setState({isRefreshing:false});this.props.connections.off("refresh:error",this.onRefreshError);notices.success(this.translate("The %(service)s account was successfully reconnected.",{args:{service:this.props.service.label},context:"Sharing: Publicize reconnection confirmation"}))},onRefreshError:function onRefreshError(){this.setState({isRefreshing:false});this.props.connections.off("refresh:success",this.onRefreshSuccess);notices.error(this.translate("The %(service)s account was unable to be reconnected.",{args:{service:this.props.service.label},context:"Sharing: Publicize reconnection confirmation"}))},connect:function connect(){this.setState({isConnecting:true});this.props.connections.once("create:success",this.onConnectionSuccess);this.props.connections.once("create:error",this.onConnectionError);this.props.onAddConnection(this.props.service)},disconnect:function disconnect(connections){if("undefined"===typeof connections){connections=serviceConnections.getRemovableConnections(this.props.service.name)}this.setState({isDisconnecting:true});this.props.connections.once("destroy:success",this.onDisconnectionSuccess);this.props.connections.once("destroy:error",this.onDisconnectionError);this.props.onRemoveConnection(connections)},refresh:function refresh(connection){this.setState({isRefreshing:true});this.props.connections.once("refresh:success",this.onRefreshSuccess);this.props.connections.once("refresh:error",this.onRefreshError);if(!connection){connection=serviceConnections.getRefreshableConnections(this.props.service.name)[0]}this.props.onRefreshConnection(connection)},performAction:function performAction(){var connectionStatus=serviceConnections.getConnectionStatus(this.props.service.name);if("connected"===connectionStatus&&serviceConnections.getRemovableConnections(this.props.service.name).length){this.disconnect();analytics.ga.recordEvent("Sharing","Clicked Disconnect Button",this.props.service.name)}else if("reconnect"===connectionStatus){this.refresh();analytics.ga.recordEvent("Sharing","Clicked Reconnect Button",this.props.service.name)}else{this.connect();analytics.ga.recordEvent("Sharing","Clicked Connect Button",this.props.service.name)}},render:function render(){var connectionStatus=serviceConnections.getConnectionStatus(this.props.service.name),connections=serviceConnections.getConnections(this.props.service.name),elementClass;elementClass=["sharing-service",this.props.service.name,connectionStatus,this.state.isOpen?"is-open":""].join(" ");var iconsMap={Facebook:"facebook",Twitter:"twitter","Google+":"google-plus",LinkedIn:"linkedin",Tumblr:"tumblr",Path:"path",Eventbrite:"eventbrite"};var header=React.createElement("div",null,React.createElement(SocialLogo,{icon:iconsMap[this.props.service.label],size:48,className:"sharing-service__logo"}),React.createElement("div",{className:"sharing-service__name"},React.createElement("h2",null,this.props.service.label),React.createElement(ServiceDescription,{service:this.props.service,status:connectionStatus,numberOfConnections:connections.length})));var content=React.createElement("div",{className:"sharing-service__content "+(serviceConnections.isFetchingAccounts()?"is-placeholder":"")},React.createElement(ServiceExamples,{service:this.props.service,site:sites.getSelectedSite()}),React.createElement(ServiceConnectedAccounts,{site:this.props.site,user:this.props.user,service:this.props.service,connections:connections,onAddConnection:this.connect,onRemoveConnection:this.disconnect,isDisconnecting:this.state.isDisconnecting,onRefreshConnection:this.refresh,isRefreshing:this.state.isRefreshing,onToggleSitewideConnection:this.props.onToggleSitewideConnection}),React.createElement(ServiceTip,{service:this.props.service}));var action=React.createElement(ServiceAction,{status:connectionStatus,service:this.props.service,onAction:this.performAction,isConnecting:this.state.isConnecting,isRefreshing:this.state.isRefreshing,isDisconnecting:this.state.isDisconnecting});return React.createElement(FoldableCard,{className:elementClass,header:header,clickableHeader:true,compact:true,summary:action,expandedSummary:action},content)}})},2683:function(module,exports,__webpack_require__){"use strict";var React=__webpack_require__(1),classNames=__webpack_require__(11);var Service=__webpack_require__(2682),ServicePlaceholder=__webpack_require__(2680),SectionHeader=__webpack_require__(1451),utils=__webpack_require__(186);var NUMBER_OF_PLACEHOLDERS=4;module.exports=React.createClass({displayName:"SharingServicesGroup",propTypes:{site:React.PropTypes.object,user:React.PropTypes.object,connections:React.PropTypes.object,onAddConnection:React.PropTypes.func,onRemoveConnection:React.PropTypes.func,onRefreshConnection:React.PropTypes.func,onToggleSitewideConnection:React.PropTypes.func,initialized:React.PropTypes.bool,services:React.PropTypes.array,title:React.PropTypes.string.isRequired,description:React.PropTypes.string},getDefaultProps:function getDefaultProps(){return{onAddConnection:function onAddConnection(){},onRemoveConnection:function onRemoveConnection(){},onRefreshConnection:function onRefreshConnection(){},onToggleSitewideConnection:function onToggleSitewideConnection(){},initialized:false}},getEligibleServices:function getEligibleServices(){var _props=this.props;var site=_props.site;var services=_props.services;if(!site){return services}return services.filter(function(service){if(site.jetpack&&!service.jetpack_support){return false}if(site.jetpack&&service.jetpack_module_required&&!site.isModuleActive(service.jetpack_module_required)){return false}if("eventbrite"===service.name&&!utils.userCan("manage_options",site)){return false}if("publicize"===service.type&&!utils.userCan("publish_posts",site)){return false}return true})},renderService:function renderService(service){return React.createElement(Service,{key:service.name,site:this.props.site,user:this.props.user,service:service,connections:this.props.connections,onAddConnection:this.props.onAddConnection,onRemoveConnection:this.props.onRemoveConnection,onRefreshConnection:this.props.onRefreshConnection,onToggleSitewideConnection:this.props.onToggleSitewideConnection})},renderServicePlaceholders:function renderServicePlaceholders(){return Array.apply(null,Array(NUMBER_OF_PLACEHOLDERS)).map(function(value,i){return React.createElement(ServicePlaceholder,{key:"service-placeholder-"+i})})},renderServices:function renderServices(services){if(this.props.initialized){return services.map(this.renderService,this)}return this.renderServicePlaceholders()},render:function render(){var services=this.getEligibleServices(),classes=classNames("sharing-services-group",{"is-empty":this.props.initialized&&!services.length});return React.createElement("div",{className:classes},React.createElement(SectionHeader,{label:this.props.title}),React.createElement("ul",{className:"sharing-services-group__services"},this.renderServices(services)))}})},2684:function(module,exports,__webpack_require__){"use strict";var _reactHelpers=__webpack_require__(1458);var page=__webpack_require__(40),React=__webpack_require__(1),i18n=__webpack_require__(13);var sites=__webpack_require__(55)(),user=__webpack_require__(37)(),utils=__webpack_require__(186),notices=__webpack_require__(71),route=__webpack_require__(122),analytics=__webpack_require__(16),setTitle=__webpack_require__(648).setDocumentHeadTitle,analyticsPageTitle="Sharing";module.exports={layout:function layout(context){var Sharing=__webpack_require__(2685),site=sites.getSelectedSite();context.store.dispatch(setTitle(i18n.translate("Sharing",{textOnly:true})));if(site&&!site.settings&&utils.userCan("manage_options",site)){site.fetchSettings()}(0,_reactHelpers.renderWithReduxStore)(React.createElement(Sharing,{path:context.path,contentComponent:context.contentComponent}),document.getElementById("primary"),context.store)},connections:function connections(context,next){var SharingConnections=__webpack_require__(2674),servicesList=__webpack_require__(2432)(),connectionsList=__webpack_require__(1653)(),site=sites.getSelectedSite(),basePath=route.sectionify(context.path),baseAnalyticsPath;if(site){baseAnalyticsPath=basePath+"/:site"}else{baseAnalyticsPath=basePath}if(site&&!utils.userCan("publish_posts",site)){notices.error(i18n.translate("You are not authorized to manage sharing settings for this site."))}if(site&&site.jetpack&&!site.isModuleActive("publicize")){page.redirect(site.isModuleActive("sharedaddy")?"/sharing/buttons/"+sites.selected:"/stats")}else{analytics.pageView.record(baseAnalyticsPath,analyticsPageTitle+" > Connections");context.contentComponent=React.createElement(SharingConnections,{user:user,services:servicesList,connections:connectionsList,sites:sites})}next()},buttons:function buttons(context,next){var SharingButtons=__webpack_require__(2663),sharingButtonsList=__webpack_require__(2434)(),postTypesList=__webpack_require__(1897)(),site=sites.getSelectedSite(),basePath=route.sectionify(context.path),baseAnalyticsPath;if(site){baseAnalyticsPath=basePath+"/:site"}else{baseAnalyticsPath=basePath}analytics.pageView.record(baseAnalyticsPath,analyticsPageTitle+" > Sharing Buttons");if(site&&!utils.userCan("manage_options",site)){notices.error(i18n.translate("You are not authorized to manage sharing settings for this site."))}if(site&&site.jetpack&&(!site.isModuleActive("sharedaddy")||site.versionCompare("3.4-dev","<"))){notices.error(i18n.translate("This page is only available to Jetpack sites running version 3.4 or higher with the Sharing module activated."))}context.contentComponent=React.createElement(SharingButtons,{site:site,buttons:sharingButtonsList,postTypes:postTypesList});next()}}},2685:function(module,exports,__webpack_require__){"use strict";var _upgradeNudge=__webpack_require__(1545);var _upgradeNudge2=_interopRequireDefault(_upgradeNudge);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}var React=__webpack_require__(1),debug=__webpack_require__(4)("calypso:my-sites:sharing"),find=__webpack_require__(33);var SectionNav=__webpack_require__(1473),NavTabs=__webpack_require__(1471),NavItem=__webpack_require__(1470),Main=__webpack_require__(147),SidebarNavigation=__webpack_require__(1465),utils=__webpack_require__(186),sites=__webpack_require__(55)();module.exports=React.createClass({displayName:"Sharing",componentDidMount:function componentDidMount(){debug("Sharing React component mounted.")},getSelectedText:function getSelectedText(){var selected=find(this.getFilters(),{path:this.props.path});if(selected){return selected.title}return""},getFilters:function getFilters(){var site=sites.getSelectedSite(),pathSuffix=sites.selected?"/"+sites.selected:"",filters=[];if(!site||!site.jetpack||site.isModuleActive("publicize")){filters.push({title:this.translate("Connections"),path:"/sharing"+pathSuffix,id:"sharing-connections"})}if(site&&utils.userCan("manage_options",site)&&(!site.jetpack||site.isModuleActive("sharedaddy")&&site.versionCompare("3.4-dev",">="))){filters.push({title:this.translate("Sharing Buttons"),path:"/sharing/buttons"+pathSuffix,id:"sharing-buttons"})}return filters},render:function render(){return React.createElement(Main,{className:"sharing"},React.createElement(SidebarNavigation,null),React.createElement(SectionNav,{selectedText:this.getSelectedText()},React.createElement(NavTabs,null,this.getFilters().map(function(filterItem){return React.createElement(NavItem,{key:filterItem.id,path:filterItem.path,selected:filterItem.path===this.props.path},filterItem.title)},this))),React.createElement(_upgradeNudge2.default,{title:this.translate("No Ads with WordPress.com Premium"),message:this.translate("Prevent ads from showing on your site."),feature:"no-adverts",event:"sharing_no_ads"}),this.props.contentComponent)}})},3169:function(module,exports,__webpack_require__){var arrayPush=__webpack_require__(774),baseDifference=__webpack_require__(272),baseUniq=__webpack_require__(273);function baseXor(arrays,iteratee,comparator){var index=-1,length=arrays.length;while(++index<length){var result=result?arrayPush(baseDifference(result,arrays[index],iteratee,comparator),baseDifference(arrays[index],result,iteratee,comparator)):arrays[index]}return result&&result.length?baseUniq(result,iteratee,comparator):[]}module.exports=baseXor},3189:function(module,exports,__webpack_require__){var baseOrderBy=__webpack_require__(777),isArray=__webpack_require__(24);function orderBy(collection,iteratees,orders,guard){if(collection==null){return[]}if(!isArray(iteratees)){iteratees=iteratees==null?[]:[iteratees]}orders=guard?undefined:orders;if(!isArray(orders)){orders=orders==null?[]:[orders]}return baseOrderBy(collection,iteratees,orders)}module.exports=orderBy},3201:function(module,exports,__webpack_require__){var arrayFilter=__webpack_require__(376),baseXor=__webpack_require__(3169),isArrayLikeObject=__webpack_require__(130),rest=__webpack_require__(47);var xor=rest(function(arrays){return baseXor(arrayFilter(arrays,isArrayLikeObject))});module.exports=xor}});